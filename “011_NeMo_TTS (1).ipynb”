{"cells":[{"cell_type":"markdown","metadata":{"id":"UFjxB7vK2Prz","pycharm":{"name":"#%% md\n"}},"source":["# 0.&nbsp;Copyright\n","\n","This notebook is used as part of the \"Deep learning / VITMMA19\" class at\n","Budapest University of Technology and Economics, Hungary,\n","https://portal.vik.bme.hu/kepzes/targyak/VITMMA19.\n","The goal is that you try the basics of text-to-speech synthesis (TTS) in practice, i.e. how deep learning models are used within TTS.\n","\n","Originally, it is from NVIDIA (NeMo toolkit), with a few minor modifications.\n","\n","Source: https://github.com/NVIDIA/NeMo/blob/stable/tutorials/tts/NeMo_TTS_Primer.ipynb\n","\n","\n","2024 (c) Mohammed Salah Al-Radhi (malradhi@tmit.bme.hu)"]},{"cell_type":"markdown","source":["# 1.&nbsp;Setup"],"metadata":{"id":"Z4bVU3ejgrDV"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"ysLvHZRO4uN2","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732976147034,"user_tz":-480,"elapsed":218544,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"283f6359-c444-4280-ccb2-dd3a96303203"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[33mDEPRECATION: git+https://github.com/NVIDIA/NeMo.git@r1.21.0#egg=nemo_toolkit[all] contains an egg fragment with a non-PEP 508 name pip 25.0 will enforce this behaviour change. A possible replacement is to use the req @ url syntax, and remove the egg fragment. Discussion can be found at https://github.com/pypa/pip/issues/11617\u001b[0m\u001b[33m\n","\u001b[0mCollecting nemo_toolkit (from nemo_toolkit[all])\n","  Cloning https://github.com/NVIDIA/NeMo.git (to revision r1.21.0) to /tmp/pip-install-gc1v3mte/nemo-toolkit_795edcbc4f6741e4b425c85551aaf5e5\n","  Running command git clone --filter=blob:none --quiet https://github.com/NVIDIA/NeMo.git /tmp/pip-install-gc1v3mte/nemo-toolkit_795edcbc4f6741e4b425c85551aaf5e5\n","  Running command git checkout -b r1.21.0 --track origin/r1.21.0\n","  Switched to a new branch 'r1.21.0'\n","  Branch 'r1.21.0' set up to track remote branch 'r1.21.0' from 'origin'.\n","  Resolved https://github.com/NVIDIA/NeMo.git to commit c0022aec9c8fedd59458935f0378a775b28d0444\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: huggingface_hub in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.26.2)\n","Requirement already satisfied: numba in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.60.0)\n","Collecting numpy<1.24,>=1.22 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading numpy-1.23.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.3 kB)\n","Collecting onnx>=1.7.0 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading onnx-1.17.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (16 kB)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (2.8.2)\n","Collecting ruamel.yaml (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading ruamel.yaml-0.18.6-py3-none-any.whl.metadata (23 kB)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (1.5.2)\n","Requirement already satisfied: setuptools>=65.5.1 in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (75.1.0)\n","Requirement already satisfied: tensorboard in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (2.17.1)\n","Requirement already satisfied: text-unidecode in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (1.3)\n","Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (2.5.1+cu121)\n","Requirement already satisfied: tqdm>=4.41.0 in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (4.66.6)\n","Collecting wget (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading wget-3.2.zip (10 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: wrapt in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (1.16.0)\n","Collecting black==19.10b0 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading black-19.10b0-py36-none-any.whl.metadata (58 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.8/58.8 kB\u001b[0m \u001b[31m3.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting click==8.0.2 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading click-8.0.2-py3-none-any.whl.metadata (3.2 kB)\n","Collecting isort<6.0.0,>5.1.0 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading isort-5.13.2-py3-none-any.whl.metadata (12 kB)\n","Collecting parameterized (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading parameterized-0.9.0-py2.py3-none-any.whl.metadata (18 kB)\n","Requirement already satisfied: pytest in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (8.3.3)\n","Collecting pytest-runner (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pytest_runner-6.0.1-py3-none-any.whl.metadata (7.3 kB)\n","Requirement already satisfied: sphinx in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (8.1.3)\n","Collecting sphinxcontrib-bibtex (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading sphinxcontrib_bibtex-2.6.3-py3-none-any.whl.metadata (6.3 kB)\n","Requirement already satisfied: wandb in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.18.7)\n","Collecting hydra-core<=1.3.2,>1.3 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading hydra_core-1.3.2-py3-none-any.whl.metadata (5.5 kB)\n","Collecting omegaconf<=2.3 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading omegaconf-2.3.0-py3-none-any.whl.metadata (3.9 kB)\n","Collecting pytorch-lightning<=2.0.7,>=2.0 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pytorch_lightning-2.0.7-py3-none-any.whl.metadata (23 kB)\n","Collecting torchmetrics>=0.11.0 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading torchmetrics-1.6.0-py3-none-any.whl.metadata (20 kB)\n","Collecting transformers<=4.33.3,>=4.0.1 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading transformers-4.33.3-py3-none-any.whl.metadata (119 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.9/119.9 kB\u001b[0m \u001b[31m9.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting webdataset<=0.1.62,>=0.1.48 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading webdataset-0.1.62-py3-none-any.whl.metadata (5.7 kB)\n","Requirement already satisfied: inflect in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (7.4.0)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (2.2.2)\n","Collecting pydantic<2 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pydantic-1.10.19-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (152 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m152.6/152.6 kB\u001b[0m \u001b[31m12.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting sacremoses>=0.0.43 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading sacremoses-0.1.1-py3-none-any.whl.metadata (8.3 kB)\n","Requirement already satisfied: sentencepiece<1.0.0 in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.2.0)\n","Collecting youtokentome>=1.0.5 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading youtokentome-1.0.6.tar.gz (86 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m86.7/86.7 kB\u001b[0m \u001b[31m8.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting braceexpand (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading braceexpand-0.1.7-py2.py3-none-any.whl.metadata (3.0 kB)\n","Requirement already satisfied: editdistance in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.8.1)\n","Collecting g2p_en (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading g2p_en-2.1.0-py3-none-any.whl.metadata (4.5 kB)\n","Requirement already satisfied: ipywidgets in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (7.7.1)\n","Collecting jiwer (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading jiwer-3.0.5-py3-none-any.whl.metadata (2.7 kB)\n","Collecting kaldi-python-io (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading kaldi-python-io-1.2.2.tar.gz (8.8 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting kaldiio (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading kaldiio-2.18.0-py3-none-any.whl.metadata (13 kB)\n","Requirement already satisfied: librosa>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.10.2.post1)\n","Collecting marshmallow (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading marshmallow-3.23.1-py3-none-any.whl.metadata (7.5 kB)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (3.8.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (24.2)\n","Collecting pyannote.core (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pyannote.core-5.0.0-py3-none-any.whl.metadata (1.4 kB)\n","Collecting pyannote.metrics (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pyannote.metrics-3.2.1-py3-none-any.whl.metadata (1.3 kB)\n","Collecting pydub (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pydub-0.25.1-py2.py3-none-any.whl.metadata (1.4 kB)\n","Requirement already satisfied: scipy>=0.14 in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (1.13.1)\n","Requirement already satisfied: soundfile in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.12.1)\n","Collecting sox (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading sox-1.5.0.tar.gz (63 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m63.9/63.9 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting texterrors (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading texterrors-0.5.1.tar.gz (23 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting boto3 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading boto3-1.35.71-py3-none-any.whl.metadata (6.7 kB)\n","Collecting datasets (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading datasets-3.1.0-py3-none-any.whl.metadata (20 kB)\n","Requirement already satisfied: einops in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.8.0)\n","Collecting faiss-cpu (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading faiss_cpu-1.9.0.post1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.4 kB)\n","Collecting fasttext (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading fasttext-0.9.3.tar.gz (73 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.4/73.4 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Collecting flask_restful (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading Flask_RESTful-0.3.10-py2.py3-none-any.whl.metadata (1.0 kB)\n","Collecting ftfy (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading ftfy-6.3.1-py3-none-any.whl.metadata (7.3 kB)\n","Requirement already satisfied: gdown in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (5.2.0)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (3.12.1)\n","Collecting ijson (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading ijson-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (21 kB)\n","Requirement already satisfied: jieba in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.42.1)\n","Collecting markdown2 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading markdown2-2.5.1-py2.py3-none-any.whl.metadata (2.2 kB)\n","Collecting megatron_core==0.3.0 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading megatron_core-0.3.0-py3-none-any.whl.metadata (1.6 kB)\n","Requirement already satisfied: nltk>=3.6.5 in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (3.9.1)\n","Collecting opencc<1.1.7 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading OpenCC-1.1.6-cp310-cp310-manylinux1_x86_64.whl.metadata (12 kB)\n","Collecting pangu (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pangu-4.0.6.1-py3-none-any.whl.metadata (5.3 kB)\n","Collecting rapidfuzz (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading rapidfuzz-3.10.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\n","Collecting rouge_score (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading rouge_score-0.1.2.tar.gz (17 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting sacrebleu (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading sacrebleu-2.4.3-py3-none-any.whl.metadata (51 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m51.8/51.8 kB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: sentence_transformers in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (3.2.1)\n","Collecting tensorstore<0.1.46 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading tensorstore-0.1.45-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.9 kB)\n","Collecting zarr (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading zarr-2.18.3-py3-none-any.whl.metadata (5.7 kB)\n","Collecting attrdict (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading attrdict-2.0.1-py2.py3-none-any.whl.metadata (6.7 kB)\n","Collecting kornia (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading kornia-0.7.4-py2.py3-none-any.whl.metadata (18 kB)\n","Collecting nemo_text_processing<=0.1.8rc0 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading nemo_text_processing-0.1.8rc0-py3-none-any.whl.metadata (7.2 kB)\n","Collecting pypinyin (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pypinyin-0.53.0-py2.py3-none-any.whl.metadata (12 kB)\n","Collecting pypinyin-dict (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading pypinyin_dict-0.8.0-py2.py3-none-any.whl.metadata (3.6 kB)\n","Collecting progress>=1.5 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading progress-1.6.tar.gz (7.8 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: tabulate>=0.8.7 in /usr/local/lib/python3.10/dist-packages (from nemo_toolkit->nemo_toolkit[all]) (0.9.0)\n","Collecting textdistance>=4.1.5 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading textdistance-4.6.3-py3-none-any.whl.metadata (18 kB)\n","Requirement already satisfied: attrs>=18.1.0 in /usr/local/lib/python3.10/dist-packages (from black==19.10b0->nemo_toolkit->nemo_toolkit[all]) (24.2.0)\n","Collecting appdirs (from black==19.10b0->nemo_toolkit->nemo_toolkit[all])\n","  Downloading appdirs-1.4.4-py2.py3-none-any.whl.metadata (9.0 kB)\n","Requirement already satisfied: toml>=0.9.4 in /usr/local/lib/python3.10/dist-packages (from black==19.10b0->nemo_toolkit->nemo_toolkit[all]) (0.10.2)\n","Collecting typed-ast>=1.4.0 (from black==19.10b0->nemo_toolkit->nemo_toolkit[all])\n","  Downloading typed_ast-1.5.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.7 kB)\n","Requirement already satisfied: regex in /usr/local/lib/python3.10/dist-packages (from black==19.10b0->nemo_toolkit->nemo_toolkit[all]) (2024.9.11)\n","Collecting pathspec<1,>=0.6 (from black==19.10b0->nemo_toolkit->nemo_toolkit[all])\n","  Downloading pathspec-0.12.1-py3-none-any.whl.metadata (21 kB)\n","Collecting antlr4-python3-runtime==4.9.* (from hydra-core<=1.3.2,>1.3->nemo_toolkit->nemo_toolkit[all])\n","  Downloading antlr4-python3-runtime-4.9.3.tar.gz (117 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m117.0/117.0 kB\u001b[0m \u001b[31m12.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","INFO: pip is looking at multiple versions of jiwer to determine which version is compatible with other requirements. This could take a while.\n","Collecting jiwer (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading jiwer-3.0.4-py3-none-any.whl.metadata (2.6 kB)\n","  Downloading jiwer-3.0.3-py3-none-any.whl.metadata (2.6 kB)\n","  Downloading jiwer-3.0.2-py3-none-any.whl.metadata (2.6 kB)\n","  Downloading jiwer-3.0.1-py3-none-any.whl.metadata (2.6 kB)\n","  Downloading jiwer-3.0.0-py3-none-any.whl.metadata (2.6 kB)\n","  Downloading jiwer-2.6.0-py3-none-any.whl.metadata (14 kB)\n","  Downloading jiwer-2.5.2-py3-none-any.whl.metadata (11 kB)\n","Collecting rapidfuzz (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading rapidfuzz-2.13.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.0 kB)\n","Requirement already satisfied: audioread>=2.1.9 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (3.0.1)\n","Requirement already satisfied: joblib>=0.14 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (1.4.2)\n","Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (4.4.2)\n","Requirement already satisfied: pooch>=1.1 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (1.8.2)\n","Requirement already satisfied: soxr>=0.3.2 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (0.5.0.post1)\n","Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (4.12.2)\n","Requirement already satisfied: lazy-loader>=0.1 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (0.4)\n","Requirement already satisfied: msgpack>=1.0 in /usr/local/lib/python3.10/dist-packages (from librosa>=0.9.0->nemo_toolkit->nemo_toolkit[all]) (1.1.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->nemo_toolkit->nemo_toolkit[all]) (1.3.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->nemo_toolkit->nemo_toolkit[all]) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->nemo_toolkit->nemo_toolkit[all]) (4.55.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->nemo_toolkit->nemo_toolkit[all]) (1.4.7)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->nemo_toolkit->nemo_toolkit[all]) (11.0.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->nemo_toolkit->nemo_toolkit[all]) (3.2.0)\n","Collecting cdifflib (from nemo_text_processing<=0.1.8rc0->nemo_toolkit->nemo_toolkit[all])\n","  Downloading cdifflib-1.2.6.tar.gz (11 kB)\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Collecting pynini==2.1.5 (from nemo_text_processing<=0.1.8rc0->nemo_toolkit->nemo_toolkit[all])\n","  Downloading pynini-2.1.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.6 kB)\n","Collecting setuptools>=65.5.1 (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading setuptools-65.5.1-py3-none-any.whl.metadata (6.3 kB)\n","Requirement already satisfied: Cython>=0.29 in /usr/local/lib/python3.10/dist-packages (from pynini==2.1.5->nemo_text_processing<=0.1.8rc0->nemo_toolkit->nemo_toolkit[all]) (3.0.11)\n","Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba->nemo_toolkit->nemo_toolkit[all]) (0.43.0)\n","Requirement already satisfied: PyYAML>=5.1.0 in /usr/local/lib/python3.10/dist-packages (from omegaconf<=2.3->nemo_toolkit->nemo_toolkit[all]) (6.0.2)\n","Requirement already satisfied: protobuf>=3.20.2 in /usr/local/lib/python3.10/dist-packages (from onnx>=1.7.0->nemo_toolkit->nemo_toolkit[all]) (4.25.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil->nemo_toolkit->nemo_toolkit[all]) (1.16.0)\n","Requirement already satisfied: fsspec>2021.06.0 in /usr/local/lib/python3.10/dist-packages (from fsspec[http]>2021.06.0->pytorch-lightning<=2.0.7,>=2.0->nemo_toolkit->nemo_toolkit[all]) (2024.10.0)\n","Collecting lightning-utilities>=0.7.0 (from pytorch-lightning<=2.0.7,>=2.0->nemo_toolkit->nemo_toolkit[all])\n","  Downloading lightning_utilities-0.11.9-py3-none-any.whl.metadata (5.2 kB)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->nemo_toolkit->nemo_toolkit[all]) (3.5.0)\n","Requirement already satisfied: cffi>=1.0 in /usr/local/lib/python3.10/dist-packages (from soundfile->nemo_toolkit->nemo_toolkit[all]) (1.17.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch->nemo_toolkit->nemo_toolkit[all]) (3.16.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch->nemo_toolkit->nemo_toolkit[all]) (3.4.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch->nemo_toolkit->nemo_toolkit[all]) (3.1.4)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.10/dist-packages (from torch->nemo_toolkit->nemo_toolkit[all]) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy==1.13.1->torch->nemo_toolkit->nemo_toolkit[all]) (1.3.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers<=4.33.3,>=4.0.1->nemo_toolkit->nemo_toolkit[all]) (2.32.3)\n","Collecting tokenizers!=0.11.3,<0.14,>=0.11.1 (from transformers<=4.33.3,>=4.0.1->nemo_toolkit->nemo_toolkit[all])\n","  Downloading tokenizers-0.13.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.7 kB)\n","Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers<=4.33.3,>=4.0.1->nemo_toolkit->nemo_toolkit[all]) (0.4.5)\n","Collecting botocore<1.36.0,>=1.35.71 (from boto3->nemo_toolkit->nemo_toolkit[all])\n","  Downloading botocore-1.35.71-py3-none-any.whl.metadata (5.7 kB)\n","Collecting jmespath<2.0.0,>=0.7.1 (from boto3->nemo_toolkit->nemo_toolkit[all])\n","  Downloading jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)\n","Collecting s3transfer<0.11.0,>=0.10.0 (from boto3->nemo_toolkit->nemo_toolkit[all])\n","  Downloading s3transfer-0.10.4-py3-none-any.whl.metadata (1.7 kB)\n","Requirement already satisfied: pyarrow>=15.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets->nemo_toolkit->nemo_toolkit[all]) (17.0.0)\n","Collecting dill<0.3.9,>=0.3.0 (from datasets->nemo_toolkit->nemo_toolkit[all])\n","  Downloading dill-0.3.8-py3-none-any.whl.metadata (10 kB)\n","Collecting xxhash (from datasets->nemo_toolkit->nemo_toolkit[all])\n","  Downloading xxhash-3.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\n","Collecting multiprocess<0.70.17 (from datasets->nemo_toolkit->nemo_toolkit[all])\n","  Downloading multiprocess-0.70.16-py310-none-any.whl.metadata (7.2 kB)\n","Collecting fsspec>2021.06.0 (from fsspec[http]>2021.06.0->pytorch-lightning<=2.0.7,>=2.0->nemo_toolkit->nemo_toolkit[all])\n","  Downloading fsspec-2024.9.0-py3-none-any.whl.metadata (11 kB)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets->nemo_toolkit->nemo_toolkit[all]) (3.11.2)\n","INFO: pip is looking at multiple versions of faiss-cpu to determine which version is compatible with other requirements. This could take a while.\n","Collecting faiss-cpu (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading faiss_cpu-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.4 kB)\n","  Downloading faiss_cpu-1.8.0.post1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.7 kB)\n","Collecting pybind11>=2.2 (from fasttext->nemo_toolkit->nemo_toolkit[all])\n","  Using cached pybind11-2.13.6-py3-none-any.whl.metadata (9.5 kB)\n","Collecting aniso8601>=0.82 (from flask_restful->nemo_toolkit->nemo_toolkit[all])\n","  Downloading aniso8601-9.0.1-py2.py3-none-any.whl.metadata (23 kB)\n","Requirement already satisfied: Flask>=0.8 in /usr/local/lib/python3.10/dist-packages (from flask_restful->nemo_toolkit->nemo_toolkit[all]) (3.0.3)\n","Requirement already satisfied: pytz in /usr/local/lib/python3.10/dist-packages (from flask_restful->nemo_toolkit->nemo_toolkit[all]) (2024.2)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from ftfy->nemo_toolkit->nemo_toolkit[all]) (0.2.13)\n","Collecting distance>=0.1.3 (from g2p_en->nemo_toolkit->nemo_toolkit[all])\n","  Downloading Distance-0.1.3.tar.gz (180 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m180.3/180.3 kB\u001b[0m \u001b[31m16.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: more-itertools>=8.5.0 in /usr/local/lib/python3.10/dist-packages (from inflect->nemo_toolkit->nemo_toolkit[all]) (10.5.0)\n","Requirement already satisfied: typeguard>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from inflect->nemo_toolkit->nemo_toolkit[all]) (4.4.1)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from gdown->nemo_toolkit->nemo_toolkit[all]) (4.12.3)\n","Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets->nemo_toolkit->nemo_toolkit[all]) (5.5.6)\n","Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.2.0)\n","Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets->nemo_toolkit->nemo_toolkit[all]) (5.7.1)\n","Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets->nemo_toolkit->nemo_toolkit[all]) (3.6.10)\n","Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets->nemo_toolkit->nemo_toolkit[all]) (7.34.0)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets->nemo_toolkit->nemo_toolkit[all]) (3.0.13)\n","Collecting kornia-rs>=0.1.0 (from kornia->nemo_toolkit->nemo_toolkit[all])\n","  Downloading kornia_rs-0.1.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas->nemo_toolkit->nemo_toolkit[all]) (2024.2)\n","Collecting sortedcontainers>=2.0.4 (from pyannote.core->nemo_toolkit->nemo_toolkit[all])\n","  Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)\n","Collecting pyannote.database>=4.0.1 (from pyannote.metrics->nemo_toolkit->nemo_toolkit[all])\n","  Downloading pyannote.database-5.1.0-py3-none-any.whl.metadata (1.2 kB)\n","Collecting docopt>=0.6.2 (from pyannote.metrics->nemo_toolkit->nemo_toolkit[all])\n","  Downloading docopt-0.6.2.tar.gz (25 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: iniconfig in /usr/local/lib/python3.10/dist-packages (from pytest->nemo_toolkit->nemo_toolkit[all]) (2.0.0)\n","Requirement already satisfied: pluggy<2,>=1.5 in /usr/local/lib/python3.10/dist-packages (from pytest->nemo_toolkit->nemo_toolkit[all]) (1.5.0)\n","Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /usr/local/lib/python3.10/dist-packages (from pytest->nemo_toolkit->nemo_toolkit[all]) (1.2.2)\n","Requirement already satisfied: tomli>=1 in /usr/local/lib/python3.10/dist-packages (from pytest->nemo_toolkit->nemo_toolkit[all]) (2.1.0)\n","Requirement already satisfied: absl-py in /usr/local/lib/python3.10/dist-packages (from rouge_score->nemo_toolkit->nemo_toolkit[all]) (1.4.0)\n","Collecting ruamel.yaml.clib>=0.2.7 (from ruamel.yaml->nemo_toolkit->nemo_toolkit[all])\n","  Downloading ruamel.yaml.clib-0.2.12-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.7 kB)\n","Collecting portalocker (from sacrebleu->nemo_toolkit->nemo_toolkit[all])\n","  Downloading portalocker-3.0.0-py3-none-any.whl.metadata (8.5 kB)\n","Collecting colorama (from sacrebleu->nemo_toolkit->nemo_toolkit[all])\n","  Downloading colorama-0.4.6-py2.py3-none-any.whl.metadata (17 kB)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from sacrebleu->nemo_toolkit->nemo_toolkit[all]) (5.3.0)\n","INFO: pip is looking at multiple versions of sentence-transformers to determine which version is compatible with other requirements. This could take a while.\n","Collecting sentence_transformers (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading sentence_transformers-3.3.1-py3-none-any.whl.metadata (10 kB)\n","  Downloading sentence_transformers-3.3.0-py3-none-any.whl.metadata (10 kB)\n","  Downloading sentence_transformers-3.2.0-py3-none-any.whl.metadata (10 kB)\n","  Downloading sentence_transformers-3.1.1-py3-none-any.whl.metadata (10 kB)\n","  Downloading sentence_transformers-3.1.0-py3-none-any.whl.metadata (23 kB)\n","  Downloading sentence_transformers-3.0.1-py3-none-any.whl.metadata (10 kB)\n","  Downloading sentence_transformers-3.0.0-py3-none-any.whl.metadata (10 kB)\n","INFO: pip is still looking at multiple versions of sentence-transformers to determine which version is compatible with other requirements. This could take a while.\n","  Downloading sentence_transformers-2.7.0-py3-none-any.whl.metadata (11 kB)\n","  Downloading sentence_transformers-2.6.1-py3-none-any.whl.metadata (11 kB)\n","Requirement already satisfied: sphinxcontrib-applehelp>=1.0.7 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.0.0)\n","Requirement already satisfied: sphinxcontrib-devhelp>=1.0.6 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.0.0)\n","Requirement already satisfied: sphinxcontrib-htmlhelp>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.1.0)\n","Requirement already satisfied: sphinxcontrib-jsmath>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (1.0.1)\n","Requirement already satisfied: sphinxcontrib-qthelp>=1.0.6 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.0.0)\n","Requirement already satisfied: sphinxcontrib-serializinghtml>=1.1.9 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.0.0)\n","Requirement already satisfied: Pygments>=2.17 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.18.0)\n","Requirement already satisfied: docutils<0.22,>=0.20 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (0.21.2)\n","Requirement already satisfied: snowballstemmer>=2.2 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.2.0)\n","Requirement already satisfied: babel>=2.13 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (2.16.0)\n","Requirement already satisfied: alabaster>=0.7.14 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (1.0.0)\n","Requirement already satisfied: imagesize>=1.3 in /usr/local/lib/python3.10/dist-packages (from sphinx->nemo_toolkit->nemo_toolkit[all]) (1.4.1)\n","Collecting pybtex>=0.24 (from sphinxcontrib-bibtex->nemo_toolkit->nemo_toolkit[all])\n","  Downloading pybtex-0.24.0-py2.py3-none-any.whl.metadata (2.0 kB)\n","Collecting pybtex-docutils>=1.0.0 (from sphinxcontrib-bibtex->nemo_toolkit->nemo_toolkit[all])\n","  Downloading pybtex_docutils-1.0.3-py3-none-any.whl.metadata (4.3 kB)\n","Requirement already satisfied: grpcio>=1.48.2 in /usr/local/lib/python3.10/dist-packages (from tensorboard->nemo_toolkit->nemo_toolkit[all]) (1.68.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard->nemo_toolkit->nemo_toolkit[all]) (3.7)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard->nemo_toolkit->nemo_toolkit[all]) (0.7.2)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard->nemo_toolkit->nemo_toolkit[all]) (3.1.3)\n","Collecting plac (from texterrors->nemo_toolkit->nemo_toolkit[all])\n","  Downloading plac-1.4.3-py2.py3-none-any.whl.metadata (5.9 kB)\n","Collecting loguru (from texterrors->nemo_toolkit->nemo_toolkit[all])\n","  Downloading loguru-0.7.2-py3-none-any.whl.metadata (23 kB)\n","Requirement already satisfied: termcolor in /usr/local/lib/python3.10/dist-packages (from texterrors->nemo_toolkit->nemo_toolkit[all]) (2.5.0)\n","Collecting Levenshtein (from texterrors->nemo_toolkit->nemo_toolkit[all])\n","  Downloading levenshtein-0.26.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.2 kB)\n","Requirement already satisfied: docker-pycreds>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from wandb->nemo_toolkit->nemo_toolkit[all]) (0.4.0)\n","Requirement already satisfied: gitpython!=3.1.29,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from wandb->nemo_toolkit->nemo_toolkit[all]) (3.1.43)\n","Requirement already satisfied: platformdirs in /usr/local/lib/python3.10/dist-packages (from wandb->nemo_toolkit->nemo_toolkit[all]) (4.3.6)\n","Requirement already satisfied: psutil>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from wandb->nemo_toolkit->nemo_toolkit[all]) (5.9.5)\n","Requirement already satisfied: sentry-sdk>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from wandb->nemo_toolkit->nemo_toolkit[all]) (2.18.0)\n","Requirement already satisfied: setproctitle in /usr/local/lib/python3.10/dist-packages (from wandb->nemo_toolkit->nemo_toolkit[all]) (1.3.4)\n","Collecting asciitree (from zarr->nemo_toolkit->nemo_toolkit[all])\n","  Downloading asciitree-0.3.3.tar.gz (4.0 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","INFO: pip is looking at multiple versions of zarr to determine which version is compatible with other requirements. This could take a while.\n","Collecting zarr (from nemo_toolkit->nemo_toolkit[all])\n","  Downloading zarr-2.18.2-py3-none-any.whl.metadata (5.7 kB)\n","Collecting numcodecs>=0.10.0 (from zarr->nemo_toolkit->nemo_toolkit[all])\n","  Downloading numcodecs-0.13.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.9 kB)\n","Collecting fasteners (from zarr->nemo_toolkit->nemo_toolkit[all])\n","  Downloading fasteners-0.19-py3-none-any.whl.metadata (4.9 kB)\n","Requirement already satisfied: urllib3!=2.2.0,<3,>=1.25.4 in /usr/local/lib/python3.10/dist-packages (from botocore<1.36.0,>=1.35.71->boto3->nemo_toolkit->nemo_toolkit[all]) (2.2.3)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.0->soundfile->nemo_toolkit->nemo_toolkit[all]) (2.22)\n","Requirement already satisfied: itsdangerous>=2.1.2 in /usr/local/lib/python3.10/dist-packages (from Flask>=0.8->flask_restful->nemo_toolkit->nemo_toolkit[all]) (2.2.0)\n","INFO: pip is looking at multiple versions of flask to determine which version is compatible with other requirements. This could take a while.\n","Collecting Flask>=0.8 (from flask_restful->nemo_toolkit->nemo_toolkit[all])\n","  Downloading flask-3.1.0-py3-none-any.whl.metadata (2.7 kB)\n","  Downloading flask-3.0.2-py3-none-any.whl.metadata (3.6 kB)\n","  Downloading flask-3.0.1-py3-none-any.whl.metadata (3.6 kB)\n","  Downloading flask-3.0.0-py3-none-any.whl.metadata (3.6 kB)\n","  Downloading flask-2.3.3-py3-none-any.whl.metadata (3.6 kB)\n","  Downloading Flask-2.3.2-py3-none-any.whl.metadata (3.7 kB)\n","  Downloading Flask-2.3.1-py3-none-any.whl.metadata (3.7 kB)\n","INFO: pip is still looking at multiple versions of flask to determine which version is compatible with other requirements. This could take a while.\n","  Downloading Flask-2.3.0-py3-none-any.whl.metadata (3.7 kB)\n","  Downloading Flask-2.2.5-py3-none-any.whl.metadata (3.9 kB)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets->nemo_toolkit->nemo_toolkit[all]) (2.4.3)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets->nemo_toolkit->nemo_toolkit[all]) (1.3.1)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets->nemo_toolkit->nemo_toolkit[all]) (1.5.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets->nemo_toolkit->nemo_toolkit[all]) (6.1.0)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets->nemo_toolkit->nemo_toolkit[all]) (0.2.0)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets->nemo_toolkit->nemo_toolkit[all]) (1.17.2)\n","Requirement already satisfied: async-timeout<6.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets->nemo_toolkit->nemo_toolkit[all]) (4.0.3)\n","Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from gitpython!=3.1.29,>=1.0.0->wandb->nemo_toolkit->nemo_toolkit[all]) (4.0.11)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (6.1.12)\n","Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (6.3.3)\n","Collecting jedi>=0.16 (from ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all])\n","  Downloading jedi-0.19.2-py2.py3-none-any.whl.metadata (22 kB)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.7.5)\n","Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (3.0.48)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.2.0)\n","Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.1.7)\n","Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (4.9.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch->nemo_toolkit->nemo_toolkit[all]) (3.0.2)\n","Requirement already satisfied: typer>=0.12.1 in /usr/local/lib/python3.10/dist-packages (from pyannote.database>=4.0.1->pyannote.metrics->nemo_toolkit->nemo_toolkit[all]) (0.13.0)\n","Collecting latexcodec>=1.0.4 (from pybtex>=0.24->sphinxcontrib-bibtex->nemo_toolkit->nemo_toolkit[all])\n","  Downloading latexcodec-3.0.0-py3-none-any.whl.metadata (4.9 kB)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers<=4.33.3,>=4.0.1->nemo_toolkit->nemo_toolkit[all]) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers<=4.33.3,>=4.0.1->nemo_toolkit->nemo_toolkit[all]) (3.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers<=4.33.3,>=4.0.1->nemo_toolkit->nemo_toolkit[all]) (2024.8.30)\n","Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (6.5.5)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->gdown->nemo_toolkit->nemo_toolkit[all]) (2.6)\n","INFO: pip is looking at multiple versions of levenshtein to determine which version is compatible with other requirements. This could take a while.\n","Collecting Levenshtein (from texterrors->nemo_toolkit->nemo_toolkit[all])\n","  Downloading levenshtein-0.26.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.2 kB)\n","  Downloading Levenshtein-0.25.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.3 kB)\n","  Downloading Levenshtein-0.25.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.3 kB)\n","  Downloading Levenshtein-0.24.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.3 kB)\n","  Downloading Levenshtein-0.23.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.4 kB)\n","  Downloading Levenshtein-0.22.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.4 kB)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.10/dist-packages (from requests[socks]->gdown->nemo_toolkit->nemo_toolkit[all]) (1.7.1)\n","Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.29,>=1.0.0->wandb->nemo_toolkit->nemo_toolkit[all]) (5.0.1)\n","Requirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.8.4)\n","Requirement already satisfied: pyzmq<25,>=17 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (24.0.1)\n","Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (23.1.0)\n","Requirement already satisfied: jupyter-core>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (5.7.2)\n","Requirement already satisfied: nbformat in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (5.10.4)\n","Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (7.16.4)\n","Requirement already satisfied: nest-asyncio>=1.5 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.6.0)\n","Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.8.3)\n","Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.18.1)\n","Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.21.0)\n","Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.1.0)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.7.0)\n","Requirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer>=0.12.1->pyannote.database>=4.0.1->pyannote.metrics->nemo_toolkit->nemo_toolkit[all]) (1.5.4)\n","Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer>=0.12.1->pyannote.database>=4.0.1->pyannote.metrics->nemo_toolkit->nemo_toolkit[all]) (13.9.4)\n","Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.10/dist-packages (from nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.2.4)\n","Requirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (6.2.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.7.1)\n","Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.3.0)\n","Requirement already satisfied: mistune<4,>=2.0.3 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (3.0.2)\n","Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.10.0)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.5.1)\n","Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.4.0)\n","Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.10/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (2.20.0)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (4.23.0)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer>=0.12.1->pyannote.database>=4.0.1->pyannote.metrics->nemo_toolkit->nemo_toolkit[all]) (3.0.0)\n","Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (21.2.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach!=5.0.0->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.5.1)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (2024.10.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.35.1)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (0.21.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer>=0.12.1->pyannote.database>=4.0.1->pyannote.metrics->nemo_toolkit->nemo_toolkit[all]) (0.1.2)\n","Requirement already satisfied: jupyter-server<3,>=1.8 in /usr/local/lib/python3.10/dist-packages (from notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.24.0)\n","Requirement already satisfied: anyio<4,>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (3.7.1)\n","Requirement already satisfied: websocket-client in /usr/local/lib/python3.10/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.8.0)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio<4,>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets->nemo_toolkit->nemo_toolkit[all]) (1.3.1)\n","Downloading black-19.10b0-py36-none-any.whl (97 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m97.5/97.5 kB\u001b[0m \u001b[31m7.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading click-8.0.2-py3-none-any.whl (97 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m97.6/97.6 kB\u001b[0m \u001b[31m8.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading megatron_core-0.3.0-py3-none-any.whl (194 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.5/194.5 kB\u001b[0m \u001b[31m16.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading hydra_core-1.3.2-py3-none-any.whl (154 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m154.5/154.5 kB\u001b[0m \u001b[31m14.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading isort-5.13.2-py3-none-any.whl (92 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m92.3/92.3 kB\u001b[0m \u001b[31m8.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading jiwer-2.5.2-py3-none-any.whl (15 kB)\n","Downloading rapidfuzz-2.13.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.2 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m55.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nemo_text_processing-0.1.8rc0-py3-none-any.whl (2.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.3/2.3 MB\u001b[0m \u001b[31m63.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading setuptools-65.5.1-py3-none-any.whl (1.2 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m48.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pynini-2.1.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (161.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m161.3/161.3 MB\u001b[0m \u001b[31m6.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading numpy-1.23.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m17.1/17.1 MB\u001b[0m \u001b[31m98.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading omegaconf-2.3.0-py3-none-any.whl (79 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.5/79.5 kB\u001b[0m \u001b[31m7.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading onnx-1.17.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m16.0/16.0 MB\u001b[0m \u001b[31m96.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading OpenCC-1.1.6-cp310-cp310-manylinux1_x86_64.whl (778 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m778.3/778.3 kB\u001b[0m \u001b[31m42.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydantic-1.10.19-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m83.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pytorch_lightning-2.0.7-py3-none-any.whl (724 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m725.0/725.0 kB\u001b[0m \u001b[31m47.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading sacremoses-0.1.1-py3-none-any.whl (897 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m897.5/897.5 kB\u001b[0m \u001b[31m49.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading tensorstore-0.1.45-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.5/13.5 MB\u001b[0m \u001b[31m99.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading textdistance-4.6.3-py3-none-any.whl (31 kB)\n","Downloading torchmetrics-1.6.0-py3-none-any.whl (926 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m926.4/926.4 kB\u001b[0m \u001b[31m60.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading transformers-4.33.3-py3-none-any.whl (7.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.6/7.6 MB\u001b[0m \u001b[31m100.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading webdataset-0.1.62-py3-none-any.whl (32 kB)\n","Downloading attrdict-2.0.1-py2.py3-none-any.whl (9.9 kB)\n","Downloading boto3-1.35.71-py3-none-any.whl (139 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m139.2/139.2 kB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading braceexpand-0.1.7-py2.py3-none-any.whl (5.9 kB)\n","Downloading datasets-3.1.0-py3-none-any.whl (480 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m480.6/480.6 kB\u001b[0m \u001b[31m34.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading faiss_cpu-1.8.0.post1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (27.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m27.0/27.0 MB\u001b[0m \u001b[31m15.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading Flask_RESTful-0.3.10-py2.py3-none-any.whl (26 kB)\n","Downloading ftfy-6.3.1-py3-none-any.whl (44 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.8/44.8 kB\u001b[0m \u001b[31m4.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading g2p_en-2.1.0-py3-none-any.whl (3.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m94.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading ijson-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (114 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.5/114.5 kB\u001b[0m \u001b[31m11.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading kaldiio-2.18.0-py3-none-any.whl (28 kB)\n","Downloading kornia-0.7.4-py2.py3-none-any.whl (899 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m899.4/899.4 kB\u001b[0m \u001b[31m57.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading markdown2-2.5.1-py2.py3-none-any.whl (48 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m48.4/48.4 kB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading marshmallow-3.23.1-py3-none-any.whl (49 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.5/49.5 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pangu-4.0.6.1-py3-none-any.whl (6.4 kB)\n","Downloading parameterized-0.9.0-py2.py3-none-any.whl (20 kB)\n","Downloading pyannote.core-5.0.0-py3-none-any.whl (58 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.5/58.5 kB\u001b[0m \u001b[31m5.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pyannote.metrics-3.2.1-py3-none-any.whl (51 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m51.4/51.4 kB\u001b[0m \u001b[31m5.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydub-0.25.1-py2.py3-none-any.whl (32 kB)\n","Downloading pypinyin-0.53.0-py2.py3-none-any.whl (834 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m834.7/834.7 kB\u001b[0m \u001b[31m52.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pypinyin_dict-0.8.0-py2.py3-none-any.whl (9.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.5/9.5 MB\u001b[0m \u001b[31m118.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pytest_runner-6.0.1-py3-none-any.whl (7.2 kB)\n","Downloading ruamel.yaml-0.18.6-py3-none-any.whl (117 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m117.8/117.8 kB\u001b[0m \u001b[31m10.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading sacrebleu-2.4.3-py3-none-any.whl (103 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m104.0/104.0 kB\u001b[0m \u001b[31m9.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading sentence_transformers-2.6.1-py3-none-any.whl (163 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m163.3/163.3 kB\u001b[0m \u001b[31m14.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading sphinxcontrib_bibtex-2.6.3-py3-none-any.whl (40 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m40.3/40.3 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading zarr-2.18.2-py3-none-any.whl (210 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m210.2/210.2 kB\u001b[0m \u001b[31m20.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading aniso8601-9.0.1-py2.py3-none-any.whl (52 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m52.8/52.8 kB\u001b[0m \u001b[31m5.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading botocore-1.35.71-py3-none-any.whl (13.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.0/13.0 MB\u001b[0m \u001b[31m109.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dill-0.3.8-py3-none-any.whl (116 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m10.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading Flask-2.2.5-py3-none-any.whl (101 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m101.8/101.8 kB\u001b[0m \u001b[31m9.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading fsspec-2024.9.0-py3-none-any.whl (179 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m179.3/179.3 kB\u001b[0m \u001b[31m14.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n","Downloading kornia_rs-0.1.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m59.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading lightning_utilities-0.11.9-py3-none-any.whl (28 kB)\n","Downloading multiprocess-0.70.16-py310-none-any.whl (134 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.8/134.8 kB\u001b[0m \u001b[31m12.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading numcodecs-0.13.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (8.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.6/8.6 MB\u001b[0m \u001b[31m117.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pathspec-0.12.1-py3-none-any.whl (31 kB)\n","Downloading pyannote.database-5.1.0-py3-none-any.whl (48 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m48.1/48.1 kB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hUsing cached pybind11-2.13.6-py3-none-any.whl (243 kB)\n","Downloading pybtex-0.24.0-py2.py3-none-any.whl (561 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m561.4/561.4 kB\u001b[0m \u001b[31m40.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pybtex_docutils-1.0.3-py3-none-any.whl (6.4 kB)\n","Downloading ruamel.yaml.clib-0.2.12-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (722 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m722.2/722.2 kB\u001b[0m \u001b[31m51.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading s3transfer-0.10.4-py3-none-any.whl (83 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m83.2/83.2 kB\u001b[0m \u001b[31m8.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)\n","Downloading tokenizers-0.13.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.8/7.8 MB\u001b[0m \u001b[31m111.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading typed_ast-1.5.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (824 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m824.7/824.7 kB\u001b[0m \u001b[31m53.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\n","Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n","Downloading fasteners-0.19-py3-none-any.whl (18 kB)\n","Downloading Levenshtein-0.22.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (172 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m172.9/172.9 kB\u001b[0m \u001b[31m16.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading loguru-0.7.2-py3-none-any.whl (62 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.5/62.5 kB\u001b[0m \u001b[31m6.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading plac-1.4.3-py2.py3-none-any.whl (22 kB)\n","Downloading portalocker-3.0.0-py3-none-any.whl (19 kB)\n","Downloading xxhash-3.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m17.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading jedi-0.19.2-py2.py3-none-any.whl (1.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m76.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading latexcodec-3.0.0-py3-none-any.whl (18 kB)\n","Building wheels for collected packages: nemo_toolkit, antlr4-python3-runtime, progress, youtokentome, fasttext, kaldi-python-io, rouge_score, sox, texterrors, wget, distance, docopt, asciitree, cdifflib\n","  Building wheel for nemo_toolkit (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for nemo_toolkit: filename=nemo_toolkit-1.21.0-py3-none-any.whl size=2542362 sha256=2269a9b613da345c0bc0dc9d4819746f84f7af1b8bdad642d08d39b34b019aab\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-wspaf827/wheels/f6/c7/d7/bdbf00a9d5f4ec4fc59700ac8e25418755600b86dfcc27780c\n","  Building wheel for antlr4-python3-runtime (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for antlr4-python3-runtime: filename=antlr4_python3_runtime-4.9.3-py3-none-any.whl size=144555 sha256=fed9386a2689f9e5946e81a675f64fabdc6b992415e61dbb50757663eca1b314\n","  Stored in directory: /root/.cache/pip/wheels/12/93/dd/1f6a127edc45659556564c5730f6d4e300888f4bca2d4c5a88\n","  Building wheel for progress (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for progress: filename=progress-1.6-py3-none-any.whl size=9613 sha256=f707a2a103c04cc74bf15b2bd6aabaee96bfa78dfd63c157277f17325d72f811\n","  Stored in directory: /root/.cache/pip/wheels/a2/68/5f/c339b20a41659d856c93ccdce6a33095493eb82c3964aac5a1\n","  Building wheel for youtokentome (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for youtokentome: filename=youtokentome-1.0.6-cp310-cp310-linux_x86_64.whl size=1951574 sha256=a4ecca5d89fdc3c46982f96d8707429e449c78ff460893291f8b86bd8a5f60fb\n","  Stored in directory: /root/.cache/pip/wheels/df/85/f8/301d2ba45f43f30bed2fe413efa760bc726b8b660ed9c2900c\n","  Building wheel for fasttext (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for fasttext: filename=fasttext-0.9.3-cp310-cp310-linux_x86_64.whl size=4296187 sha256=dd05558696e208f2ff786d717172a42dbb90959e4c2abc34b56e3476ddd1915b\n","  Stored in directory: /root/.cache/pip/wheels/0d/a2/00/81db54d3e6a8199b829d58e02cec2ddb20ce3e59fad8d3c92a\n","  Building wheel for kaldi-python-io (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for kaldi-python-io: filename=kaldi_python_io-1.2.2-py3-none-any.whl size=8952 sha256=cbce40a2c3ba89694b2f0608b9095630ad8d06523145bb69617af4fe05476056\n","  Stored in directory: /root/.cache/pip/wheels/b7/23/5f/49d3a826be576faf61d84e8028e1914bb36a5586ee2613b087\n","  Building wheel for rouge_score (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for rouge_score: filename=rouge_score-0.1.2-py3-none-any.whl size=24935 sha256=4190e46d31ed439d5e599bdd7fbc0b27f04c3251b4035c27b69e3268c07f07f9\n","  Stored in directory: /root/.cache/pip/wheels/5f/dd/89/461065a73be61a532ff8599a28e9beef17985c9e9c31e541b4\n","  Building wheel for sox (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sox: filename=sox-1.5.0-py3-none-any.whl size=40037 sha256=b9120600dae609a4c8ac035f14f8ab56d743c891b41f478687783b1b071ecac2\n","  Stored in directory: /root/.cache/pip/wheels/74/e7/7b/8033be3ec5e4994595d01269fc9657c8fd83a0dcbf8536666a\n","  Building wheel for texterrors (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for texterrors: filename=texterrors-0.5.1-cp310-cp310-linux_x86_64.whl size=1067480 sha256=e19a4d7cf2e994e0100a63bc667a60c8d603aca39851448da9e67fc084e044a3\n","  Stored in directory: /root/.cache/pip/wheels/64/b3/44/612e60c5d0d1f956213e08ae2c3f73443fde51878c778a9a38\n","  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for wget: filename=wget-3.2-py3-none-any.whl size=9656 sha256=ee52c1256ba70ffad52db82eacdb7e409cfdd4a1296101a116e270969fd72212\n","  Stored in directory: /root/.cache/pip/wheels/8b/f1/7f/5c94f0a7a505ca1c81cd1d9208ae2064675d97582078e6c769\n","  Building wheel for distance (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for distance: filename=Distance-0.1.3-py3-none-any.whl size=16256 sha256=4bf31465c7043bd69600fce01a81e536574e9f6cda0a9eabac6e2dac06803ed5\n","  Stored in directory: /root/.cache/pip/wheels/e8/bb/de/f71bf63559ea9a921059a5405806f7ff6ed612a9231c4a9309\n","  Building wheel for docopt (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13706 sha256=47899d7e1ad67f8bee1227edf1795bff936bcf6f1e5e61d1507e3c577695ec8a\n","  Stored in directory: /root/.cache/pip/wheels/fc/ab/d4/5da2067ac95b36618c629a5f93f809425700506f72c9732fac\n","  Building wheel for asciitree (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for asciitree: filename=asciitree-0.3.3-py3-none-any.whl size=5034 sha256=f17d87724d541f9910b95bce26cc253071e87332ec2a0a21a8f3370bc0c92ec1\n","  Stored in directory: /root/.cache/pip/wheels/7f/4e/be/1171b40f43b918087657ec57cf3b81fa1a2e027d8755baa184\n","  Building wheel for cdifflib (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for cdifflib: filename=cdifflib-1.2.6-cp310-cp310-linux_x86_64.whl size=27679 sha256=e31dd345e922b2a63a0d8319231a8680ea0adf3246d922411d3b1834fa267d07\n","  Stored in directory: /root/.cache/pip/wheels/87/a7/fd/8061e24ed08689045cb6d1ca303768dc463b20a5a338174841\n","Successfully built nemo_toolkit antlr4-python3-runtime progress youtokentome fasttext kaldi-python-io rouge_score sox texterrors wget distance docopt asciitree cdifflib\n","Installing collected packages: wget, tokenizers, sortedcontainers, pydub, progress, plac, pangu, opencc, megatron_core, ijson, docopt, distance, braceexpand, asciitree, appdirs, antlr4-python3-runtime, aniso8601, xxhash, typed-ast, textdistance, setuptools, ruamel.yaml.clib, rapidfuzz, pytest-runner, pypinyin, pynini, pydantic, pybind11, portalocker, pathspec, parameterized, omegaconf, numpy, marshmallow, markdown2, loguru, latexcodec, kornia-rs, jmespath, jedi, isort, ftfy, fsspec, fasteners, dill, colorama, click, cdifflib, attrdict, youtokentome, webdataset, tensorstore, sox, sacremoses, sacrebleu, ruamel.yaml, pypinyin-dict, pybtex, onnx, numcodecs, multiprocess, lightning-utilities, Levenshtein, kaldiio, kaldi-python-io, jiwer, hydra-core, Flask, fasttext, faiss-cpu, botocore, black, zarr, transformers, torchmetrics, texterrors, s3transfer, rouge_score, pybtex-docutils, pyannote.core, kornia, g2p_en, flask_restful, sphinxcontrib-bibtex, sentence_transformers, pyannote.database, nemo_toolkit, nemo_text_processing, boto3, pytorch-lightning, pyannote.metrics, datasets\n","  Attempting uninstall: tokenizers\n","    Found existing installation: tokenizers 0.20.3\n","    Uninstalling tokenizers-0.20.3:\n","      Successfully uninstalled tokenizers-0.20.3\n","  Attempting uninstall: setuptools\n","    Found existing installation: setuptools 75.1.0\n","    Uninstalling setuptools-75.1.0:\n","      Successfully uninstalled setuptools-75.1.0\n","  Attempting uninstall: pydantic\n","    Found existing installation: pydantic 2.9.2\n","    Uninstalling pydantic-2.9.2:\n","      Successfully uninstalled pydantic-2.9.2\n","  Attempting uninstall: numpy\n","    Found existing installation: numpy 1.26.4\n","    Uninstalling numpy-1.26.4:\n","      Successfully uninstalled numpy-1.26.4\n","  Attempting uninstall: fsspec\n","    Found existing installation: fsspec 2024.10.0\n","    Uninstalling fsspec-2024.10.0:\n","      Successfully uninstalled fsspec-2024.10.0\n","  Attempting uninstall: click\n","    Found existing installation: click 8.1.7\n","    Uninstalling click-8.1.7:\n","      Successfully uninstalled click-8.1.7\n","  Attempting uninstall: tensorstore\n","    Found existing installation: tensorstore 0.1.68\n","    Uninstalling tensorstore-0.1.68:\n","      Successfully uninstalled tensorstore-0.1.68\n","  Attempting uninstall: Flask\n","    Found existing installation: Flask 3.0.3\n","    Uninstalling Flask-3.0.3:\n","      Successfully uninstalled Flask-3.0.3\n","  Attempting uninstall: transformers\n","    Found existing installation: transformers 4.46.2\n","    Uninstalling transformers-4.46.2:\n","      Successfully uninstalled transformers-4.46.2\n","  Attempting uninstall: sentence_transformers\n","    Found existing installation: sentence-transformers 3.2.1\n","    Uninstalling sentence-transformers-3.2.1:\n","      Successfully uninstalled sentence-transformers-3.2.1\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","albucore 0.0.19 requires numpy>=1.24.4, but you have numpy 1.23.5 which is incompatible.\n","albumentations 1.4.20 requires numpy>=1.24.4, but you have numpy 1.23.5 which is incompatible.\n","albumentations 1.4.20 requires pydantic>=2.7.0, but you have pydantic 1.10.19 which is incompatible.\n","bigframes 1.27.0 requires numpy>=1.24.0, but you have numpy 1.23.5 which is incompatible.\n","chex 0.1.87 requires numpy>=1.24.1, but you have numpy 1.23.5 which is incompatible.\n","dask 2024.10.0 requires click>=8.1, but you have click 8.0.2 which is incompatible.\n","gcsfs 2024.10.0 requires fsspec==2024.10.0, but you have fsspec 2024.9.0 which is incompatible.\n","jax 0.4.33 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\n","jaxlib 0.4.33 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\n","langchain 0.3.7 requires pydantic<3.0.0,>=2.7.4, but you have pydantic 1.10.19 which is incompatible.\n","langchain-core 0.3.19 requires pydantic<3.0.0,>=2.5.2; python_full_version < \"3.12.4\", but you have pydantic 1.10.19 which is incompatible.\n","orbax-checkpoint 0.6.4 requires tensorstore>=0.1.60, but you have tensorstore 0.1.45 which is incompatible.\n","xarray 2024.10.0 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed Flask-2.2.5 Levenshtein-0.22.0 aniso8601-9.0.1 antlr4-python3-runtime-4.9.3 appdirs-1.4.4 asciitree-0.3.3 attrdict-2.0.1 black-19.10b0 boto3-1.35.71 botocore-1.35.71 braceexpand-0.1.7 cdifflib-1.2.6 click-8.0.2 colorama-0.4.6 datasets-3.1.0 dill-0.3.8 distance-0.1.3 docopt-0.6.2 faiss-cpu-1.8.0.post1 fasteners-0.19 fasttext-0.9.3 flask_restful-0.3.10 fsspec-2024.9.0 ftfy-6.3.1 g2p_en-2.1.0 hydra-core-1.3.2 ijson-3.3.0 isort-5.13.2 jedi-0.19.2 jiwer-2.5.2 jmespath-1.0.1 kaldi-python-io-1.2.2 kaldiio-2.18.0 kornia-0.7.4 kornia-rs-0.1.7 latexcodec-3.0.0 lightning-utilities-0.11.9 loguru-0.7.2 markdown2-2.5.1 marshmallow-3.23.1 megatron_core-0.3.0 multiprocess-0.70.16 nemo_text_processing-0.1.8rc0 nemo_toolkit-1.21.0 numcodecs-0.13.1 numpy-1.23.5 omegaconf-2.3.0 onnx-1.17.0 opencc-1.1.6 pangu-4.0.6.1 parameterized-0.9.0 pathspec-0.12.1 plac-1.4.3 portalocker-3.0.0 progress-1.6 pyannote.core-5.0.0 pyannote.database-5.1.0 pyannote.metrics-3.2.1 pybind11-2.13.6 pybtex-0.24.0 pybtex-docutils-1.0.3 pydantic-1.10.19 pydub-0.25.1 pynini-2.1.5 pypinyin-0.53.0 pypinyin-dict-0.8.0 pytest-runner-6.0.1 pytorch-lightning-2.0.7 rapidfuzz-2.13.7 rouge_score-0.1.2 ruamel.yaml-0.18.6 ruamel.yaml.clib-0.2.12 s3transfer-0.10.4 sacrebleu-2.4.3 sacremoses-0.1.1 sentence_transformers-2.6.1 setuptools-65.5.1 sortedcontainers-2.4.0 sox-1.5.0 sphinxcontrib-bibtex-2.6.3 tensorstore-0.1.45 textdistance-4.6.3 texterrors-0.5.1 tokenizers-0.13.3 torchmetrics-1.6.0 transformers-4.33.3 typed-ast-1.5.5 webdataset-0.1.62 wget-3.2 xxhash-3.5.0 youtokentome-1.0.6 zarr-2.18.2\n"]}],"source":["# this will take a few minutes to install, so start doing it, and after that, you can start reading Chapter 2.\n","\n","# Install NeMo library.\n","BRANCH = 'r1.21.0'\n","!python -m pip install git+https://github.com/NVIDIA/NeMo.git@$BRANCH#egg=nemo_toolkit[all]"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"O-HRFHBb_RDH","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732976582928,"user_tz":-480,"elapsed":234,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"b7a37592-b211-47e8-aa0f-71527a46862a"},"outputs":[{"output_type":"stream","name":"stdout","text":["fatal: destination path 'nemo' already exists and is not an empty directory.\n"]}],"source":["# Download local version of NeMo scripts. If you are running locally and want to use your own local NeMo code,\n","# comment out the below lines and set NEMO_DIR to your local path.\n","NEMO_DIR = 'nemo'\n","!git clone https://github.com/NVIDIA/NeMo.git $NEMO_DIR"]},{"cell_type":"code","source":["!pip install huggingface-hub==0.23.2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E8_W37c5ddOt","executionInfo":{"status":"ok","timestamp":1732976814436,"user_tz":-480,"elapsed":3421,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"5765c41a-0268-46f5-caa4-0a6496cd7f3b"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting huggingface-hub==0.23.2\n","  Downloading huggingface_hub-0.23.2-py3-none-any.whl.metadata (12 kB)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub==0.23.2) (3.16.1)\n","Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub==0.23.2) (2024.9.0)\n","Requirement already satisfied: packaging>=20.9 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub==0.23.2) (24.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub==0.23.2) (6.0.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub==0.23.2) (2.32.3)\n","Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub==0.23.2) (4.66.6)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub==0.23.2) (4.12.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub==0.23.2) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub==0.23.2) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub==0.23.2) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub==0.23.2) (2024.8.30)\n","Downloading huggingface_hub-0.23.2-py3-none-any.whl (401 kB)\n","\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/401.7 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m399.4/401.7 kB\u001b[0m \u001b[31m16.7 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m401.7/401.7 kB\u001b[0m \u001b[31m11.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: huggingface-hub\n","  Attempting uninstall: huggingface-hub\n","    Found existing installation: huggingface-hub 0.26.2\n","    Uninstalling huggingface-hub-0.26.2:\n","      Successfully uninstalled huggingface-hub-0.26.2\n","Successfully installed huggingface-hub-0.23.2\n"]}]},{"cell_type":"markdown","metadata":{"id":"sgqwl2ycC1Sh","pycharm":{"name":"#%% md\n"}},"source":["# 2.&nbsp;Introduction to TTS"]},{"cell_type":"markdown","metadata":{"id":"UYHRrdrXHe28","pycharm":{"name":"#%% md\n"}},"source":["This notebook provides a high level overview of text-to-speech (TTS). It will cover high level concepts and discuss each component in a standard TTS pipeline, providing relevant examples and code snippets using [NeMo](https://github.com/NVIDIA/NeMo)."]},{"cell_type":"markdown","metadata":{"id":"8meIFtgWHmxt","pycharm":{"name":"#%% md\n"}},"source":["# 3.&nbsp;What is TTS?"]},{"cell_type":"markdown","metadata":{"id":"6t8rK7L2HpZd","pycharm":{"name":"#%% md\n"}},"source":["**Text-to-speech**, also known as **TTS** or **speech synthesis**, refers to a system by which a computer reads text aloud. Typically the synthesized audio resembles a realistic human voice.\n","\n","Most TTS models sound like the voice of the speaker whose audio it is trained on. Though some more recently developed algorithms have the potential to sound like real speakers they were not trained on, or sound like entirely new voices.\n"]},{"cell_type":"markdown","metadata":{"id":"MC9oz1kiHqsW","pycharm":{"name":"#%% md\n"}},"source":["# 4.&nbsp;The TTS pipeline"]},{"cell_type":"markdown","metadata":{"id":"ODp1OnA0SYdF","pycharm":{"name":"#%% md\n"}},"source":["Modern TTS systems are fairly complex, with an end to end pipeline consisting of several components that each require their own model or heuristics.\n","\n","A standard pipeline might look like:\n","\n","1.   **Text Normalization**: Converting raw text to spoken text (eg. \"Mr.\" &rarr; \"mister\").<br>\n","2.   **Grapheme to Phoneme conversion (G2P)**: Convert basic units of text (ie. graphemes/characters) to basic units of spoken language (ie. phonemes).\n","3.   **Spectrogram Synthesis**: Convert text/phonemes into a spectrogram.\n","4.   **Audio Synthesis**: Convert spectrogram into audio. Also known as **spectrogram inversion**. Models which do this are called **vocoders**.\n","\n","While this is the most common structure, there may be fewer or additional steps depending on the use case. For example, some languages do not require G2P and can instead rely on the model to convert raw text/graphemes to spectrogram.\n","\n","<div>\n","<img src=\"https://raw.githubusercontent.com/NVIDIA/NeMo/stable/tutorials/tts/images/tts_pipeline.png\" width=\"500\", height=\"500\"/>\n","</div>"]},{"cell_type":"markdown","metadata":{"id":"XRWiZq5PgNCK","pycharm":{"name":"#%% md\n"}},"source":["# 5.&nbsp;Text Normalization (TN)"]},{"cell_type":"markdown","metadata":{"id":"YFJdiLaPgQAD","pycharm":{"name":"#%% md\n"}},"source":["The first step is to pre-process the raw input text into a standardized form. Some examples of processing steps could include:\n","\n","<table>\n","  <tr>\n","    <th>Normalization Type</th>\n","    <th>Input</th>\n","    <th>Output</th>\n","  </tr>\n","  <tr>\n","    <td>Abbreviations</td>\n","    <td>Mr.</td>\n","    <td>mister<td>\n","  </tr>\n","  <tr>\n","    <td>Acronyms</td>\n","    <td>TTS</td>\n","    <td>text to speech<td>\n","  </tr>\n","  <tr>\n","    <td>Numbers</td>\n","    <td>42</td>\n","    <td>forty two</td>\n","  </tr>\n","  <tr>\n","    <td>Decimals</td>\n","    <td>1.2</td>\n","    <td>one point two</td>\n","  </tr>\n","  <tr>\n","    <td>Roman Numerals</td>\n","    <td>VII</td>\n","    <td>seventh</td>\n","  </tr>\n","  <tr>\n","    <td>Cardinal Directions</td>\n","    <td>N E S W</td>\n","    <td>north east south west</td>\n","  </tr>\n","  <tr>\n","    <td>URL</td>\n","    <td>www.github.com</td>\n","    <td>w w w dot github dot com</td>\n","  </tr>\n","</table>\n","\n","The above examples may be slightly different than the output of the NeMo text normalization code. More details on NeMo text normalization can be found in the [TN documentation](https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/stable/nlp/text_normalization/intro.html).\n","\n","A more comprehensive list of text normalization rules, examples, and languages are available in the [code](https://github.com/NVIDIA/NeMo-text-processing/tree/main/nemo_text_processing/text_normalization).\n","\n"]},{"cell_type":"markdown","metadata":{"id":"e_vqDYu9yVFT","pycharm":{"name":"#%% md\n"}},"source":["## 5.1&nbsp;TN example"]},{"cell_type":"markdown","metadata":{"id":"EptHrRZeBH46","pycharm":{"name":"#%% md\n"}},"source":["After installing NeMo, we can do text normalization with just a few lines of code."]},{"cell_type":"code","execution_count":13,"metadata":{"id":"pQw-3Elg-AJg","pycharm":{"name":"#%%\n"},"executionInfo":{"status":"ok","timestamp":1732976890752,"user_tz":-480,"elapsed":38890,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}}},"outputs":[],"source":["try:\n","    from nemo_text_processing.text_normalization.normalize import Normalizer\n","except ModuleNotFoundError:\n","    raise ModuleNotFoundError(\n","        \"The package `nemo_text_processing` was not installed in this environment. Please refer to\"\n","        \" https://github.com/NVIDIA/NeMo-text-processing and install this package before using \"\n","        \"this script\"\n","    )\n","\n","text_normalizer = Normalizer(input_case=\"cased\", lang=\"en\")"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"SPMVhS8qrFCI","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c45852c1-5cb3-463b-c5b9-cc09f4d463eb","executionInfo":{"status":"ok","timestamp":1732976989441,"user_tz":-480,"elapsed":229,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mr. Johnson is turning 35 years old on 04-15-2023.\n","mister Johnson is turning thirty five years old on april fifteenth twenty twenty three.\n"]}],"source":["text = \"Mr. Johnson is turning 35 years old on 04-15-2023.\"\n","normalized_text = text_normalizer.normalize(text)\n","\n","print(text)\n","print(normalized_text)"]},{"cell_type":"code","source":["### YOUR TASK: test text normalization with several other examples.\n","# add a sentence with common abbreviations, like 'etc.', 'e.g.', 'ASAP', 'RSVP', ...\n","# extend the sentence with dates in various formats (e.g. month with numbers / abbreviated)\n","# extend the sentence with numbers including decimals\n","# extend the sentence with special characters, like €, $, @,\n","# ---> and see, which of these are noramlized well. did you find any issues in the text normalization part?"],"metadata":{"id":"SXj8tDh8n0Tv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### YOUR SOLUTION"],"metadata":{"id":"C9c42Nc8TO2_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["text1 = \"Call me btc.\"\n","normalized_text1 = text_normalizer.normalize(text1)\n","\n","print(text1)\n","print(normalized_text1)\n","\n","text2 = \"Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . \"\n","normalized_text2 = text_normalizer.normalize(text2)\n","\n","print(text2)\n","print(normalized_text2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mXmMD-xMY15L","executionInfo":{"status":"ok","timestamp":1732976940690,"user_tz":-480,"elapsed":210,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"b4632143-907e-47de-cc32-0f2ee88adea9"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Call me btc.\n","Call me btc.\n","Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . \n","Hello,bro.I hope you can choose cigarettes worth twenty dollars ten cents on Nov. thirty.\n"]}]},{"cell_type":"markdown","metadata":{"id":"8KxovRNsyZdr","pycharm":{"name":"#%% md\n"}},"source":["## 5.2&nbsp;TN approach"]},{"cell_type":"markdown","metadata":{"id":"OrRZejiGte90","pycharm":{"name":"#%% md\n"}},"source":["Today text normalization is typically a very manual process involving lots of rules, heuristics, and regular expressions.\n","\n","It is difficult to train a machine learning model to automate this step due to lack of labeled data. To get ground truth data one would need to manually annotate the entire dataset. The resulting model would then have strictly worse performance than the manual system producing the labels, making it better to use the original labeling system rather than the model."]},{"cell_type":"markdown","metadata":{"id":"_kVLSOCeyFCL","pycharm":{"name":"#%% md\n"}},"source":["**Dataset Preparation**\n","\n","Most common public datasets for TTS modeling are already normalized before they are uploaded, allowing users to skip this step entirely.\n","\n","When preparing new datasets for training, individuals will often rely on open source libraries for normalization, manually adding new logic into the system as they find situations in their datasets not covered by the pre-existing logic.\n","\n","This logic is also hard to generalize across *languages*, making scaling TTS to multiple languages very challenging. Enterprises often find it necessary to hire linguists for every language they operate in, whose responsibility is to manually develop and improve the text processing and normalization for their specific languages and users."]},{"cell_type":"markdown","metadata":{"id":"CPh9zYO71Pih","pycharm":{"name":"#%% md\n"}},"source":["# 6.&nbsp;Grapheme to Phoneme (G2P)"]},{"cell_type":"markdown","metadata":{"id":"rXij0PkxIqrj","pycharm":{"name":"#%% md\n"}},"source":["Next we convert the written text into **phonemes**, the most basic unit of human speech.\n","\n","For example (using [ARPABET](https://en.wikipedia.org/wiki/ARPABET)): *Hello World &rarr; HH, AH0, L, OW1, ,W, ER1, L, D*\n","\n","Some languages, such as Spanish and German, are *phonetic*, meaning their written characters/graphemes are always pronounced the same. For such languages G2P is unnecessary.\n","\n","However English is not Phonetic because:\n","*   Characters change pronunciation depending on what word they are in.\n","*   Some phonemes are represented by multiple characters (eg. \"ch\", \"th\", \"ph\")\n","*   Some words are [Heteronyms](https://en.wikipedia.org/wiki/Heteronym_(linguistics%29#English), which are words with the same spelling but different pronunciation or meaning.\n","  * For example, \"read\" is pronounced differently depending on whether it is present tense or past tense.\n","  * Some heteronyms can be disambiguated based on what part of speech they are. But some, such as bass (fish or instrument), can only be disambiguated based on meaning/context.\n","\n","For non-phonetic languages like English it is still possible to train a TTS model directly on the graphemes. But doing so will make the pronunciation of some words less accurate.\n","\n","Details on how NeMo G2P works can be found in our [G2P documentation](https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/stable/tts/g2p.html)."]},{"cell_type":"markdown","metadata":{"id":"KFytLD_hOt7F","pycharm":{"name":"#%% md\n"}},"source":["## 6.1&nbsp;Phonetic Alphabets"]},{"cell_type":"markdown","metadata":{"id":"ZaejnPZ5Otbm","pycharm":{"name":"#%% md\n"}},"source":["There are several different alphabets that can be used to represent the phonetic pronunciation of a sentence.\n","\n","The most common phonetic alphabet is the **International Phonetic Alphabet (IPA)**, which provides a common set of phonemes for all languages.\n","\n","For English, **ARPABET** is also very common. Largely due to the popularity of the [CMU Pronouncing Dictionary](http://www.speech.cs.cmu.edu/cgi-bin/cmudict)."]},{"cell_type":"markdown","metadata":{"id":"gEUUBp5ePuEv","pycharm":{"name":"#%% md\n"}},"source":["## 6.2&nbsp;G2P example"]},{"cell_type":"markdown","metadata":{"id":"xKttt_w6cc6w","pycharm":{"name":"#%% md\n"}},"source":["We will show how to do both IPA and ARPABET G2P using NeMo.\n"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"d8qbJIQuPvmx","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732978763279,"user_tz":-480,"elapsed":27975,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"b46801f8-011d-4324-a70f-084abed007fd"},"outputs":[{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 14:59:09 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/megatron/core/tensor_parallel/layers.py:243: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.\n","      def forward(\n","    \n","[NeMo W 2024-11-30 14:59:09 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/megatron/core/tensor_parallel/layers.py:254: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.\n","      def backward(ctx, grad_output):\n","    \n","[NeMo W 2024-11-30 14:59:09 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/megatron/core/tensor_parallel/layers.py:314: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.\n","      def forward(\n","    \n","[NeMo W 2024-11-30 14:59:09 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/megatron/core/tensor_parallel/layers.py:349: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.\n","      def backward(ctx, grad_output):\n","    \n","[NeMo W 2024-11-30 14:59:15 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.\n","      torch.utils._pytree._register_pytree_node(\n","    \n","[NeMo W 2024-11-30 14:59:17 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/transformers/utils/generic.py:311: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.\n","      torch.utils._pytree._register_pytree_node(\n","    \n","[NeMo W 2024-11-30 14:59:18 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/nemo/collections/tts/modules/common.py:206: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n","      @amp.autocast(False)\n","    \n","[NeMo E 2024-11-30 14:59:19 en_us_arpabet:104] Torch distributed needs to be initialized before you initialized EnglishG2p. This class is prone to data access race conditions. Now downloading corpora from global rank 0. If other ranks pass this before rank 0, errors might result.\n","[NeMo W 2024-11-30 14:59:19 en_us_arpabet:121] English g2p_dict will be used from nltk.corpus.cmudict.dict(), because phoneme_dict_path=None. Note that nltk.corpus.cmudict.dict() has old version (0.6) of CMUDict. You can use the latest official version of CMUDict (0.7b) with additional changes from NVIDIA directly from NeMo using the path scripts/tts_dataset_files/cmudict-0.7b_nv22.10.\n","[NeMo W 2024-11-30 14:59:20 en_us_arpabet:66] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n","[NeMo W 2024-11-30 14:59:20 experimental:26] `<class 'nemo.collections.tts.g2p.models.i18n_ipa.IpaG2p'>` is experimental and not ready for production yet. Use at your own risk.\n","[NeMo W 2024-11-30 14:59:22 i18n_ipa:124] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n"]}],"source":["import os\n","from nemo.collections.tts.g2p.models.en_us_arpabet import EnglishG2p\n","from nemo.collections.tts.g2p.models.i18n_ipa import IpaG2p\n","\n","ipa_dict_path = os.path.join(NEMO_DIR, \"scripts\", \"tts_dataset_files\", \"ipa_cmudict-0.7b_nv23.01.txt\")\n","\n","# EnglishG2p uses the CMU dictionary by default, if none is provided\n","arpabet_g2p = EnglishG2p()\n","ipa_g2p = IpaG2p(phoneme_dict=ipa_dict_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xSaNypYJURXA","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["text = \"Hello world\"\n","arpabet_phonemes = arpabet_g2p(text)\n","ipa_phonemes = ipa_g2p(text)\n","\n","print(text)\n","print(arpabet_phonemes)\n","print(ipa_phonemes)"]},{"cell_type":"markdown","metadata":{"id":"AaZPPpsPcjCZ","pycharm":{"name":"#%% md\n"}},"source":["Notice that graphemes are returned for the word \"hello\" rather than the ARPABET phonemes.\n","\n","This is because the English G2P module uses its dictionary to map graphemes to phonemes. The word \"hello\" has two possible pronunciations."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JcH24VMMXtkl","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["print(arpabet_g2p.phoneme_dict['hello'])"]},{"cell_type":"markdown","metadata":{"id":"NCeu-W-NeHjZ","pycharm":{"name":"#%% md\n"}},"source":["Since the pronunciation is *ambiguous*, it returns the graphemes instead. By default it will also do this for any word **out of vocabulary (oov)** words that are not in the CMU dictionary.\n","\n","In general, handling ambiguous pronunciations is a difficult problem which we will discuss more below.\n","\n","For now, we can tell the G2P module to simply return the first pronunciation in the dictionary by setting `ignore_ambiguous_words=False`."]},{"cell_type":"code","execution_count":17,"metadata":{"id":"Edv2DIqEdWco","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732978772347,"user_tz":-480,"elapsed":2544,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"9b9ea18a-011c-4771-9dbc-1b0694d2ec05"},"outputs":[{"output_type":"stream","name":"stderr","text":["[NeMo E 2024-11-30 14:59:29 en_us_arpabet:104] Torch distributed needs to be initialized before you initialized EnglishG2p. This class is prone to data access race conditions. Now downloading corpora from global rank 0. If other ranks pass this before rank 0, errors might result.\n","[NeMo W 2024-11-30 14:59:29 en_us_arpabet:121] English g2p_dict will be used from nltk.corpus.cmudict.dict(), because phoneme_dict_path=None. Note that nltk.corpus.cmudict.dict() has old version (0.6) of CMUDict. You can use the latest official version of CMUDict (0.7b) with additional changes from NVIDIA directly from NeMo using the path scripts/tts_dataset_files/cmudict-0.7b_nv22.10.\n","[NeMo W 2024-11-30 14:59:30 en_us_arpabet:66] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n","[NeMo W 2024-11-30 14:59:30 experimental:26] `<class 'nemo.collections.tts.g2p.models.i18n_ipa.IpaG2p'>` is experimental and not ready for production yet. Use at your own risk.\n","[NeMo W 2024-11-30 14:59:31 i18n_ipa:124] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n"]}],"source":["arpabet_g2p = EnglishG2p(ignore_ambiguous_words=False)\n","ipa_g2p = IpaG2p(phoneme_dict=ipa_dict_path, ignore_ambiguous_words=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SnVXmlildnsT","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["text = \"Hello world\"\n","arpabet_phonemes = arpabet_g2p(text)\n","ipa_phonemes = ipa_g2p(text)\n","\n","print(text)\n","print(arpabet_phonemes)\n","print(ipa_phonemes)"]},{"cell_type":"code","source":["### YOUR TASK: get the previous sentence, that is the result of the Text Normalization part!\n","# and apply G2P (ARPABET) on that sentence\n","# observe how the words have changes to individual phonemes!"],"metadata":{"id":"5Hb3skQXv_mS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### YOUR SOLUTION"],"metadata":{"id":"VWYMD9JYwH_7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arpabet_phonemes1 = arpabet_g2p(normalized_text2)\n","ipa_phonemes1 = ipa_g2p(normalized_text2)\n","\n","print(normalized_text2)\n","print(arpabet_phonemes1)\n","print(ipa_phonemes1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R48KLieGk-GD","executionInfo":{"status":"ok","timestamp":1732978785999,"user_tz":-480,"elapsed":243,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"2a89bd5b-d30f-487a-fa4b-205481627633"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello,bro.I hope you can choose cigarettes worth twenty dollars ten cents on Nov. thirty.\n","['HH', 'AH0', 'L', 'OW1', ',', 'B', 'R', 'OW1', '.', 'AY1', ' ', 'HH', 'OW1', 'P', ' ', 'Y', 'UW1', ' ', 'K', 'AE1', 'N', ' ', 'CH', 'UW1', 'Z', ' ', 'S', 'IH2', 'G', 'ER0', 'EH1', 'T', 'S', ' ', 'W', 'ER1', 'TH', ' ', 'T', 'W', 'EH1', 'N', 'T', 'IY0', ' ', 'D', 'AA1', 'L', 'ER0', 'Z', ' ', 'T', 'EH1', 'N', ' ', 'S', 'EH1', 'N', 'T', 'S', ' ', 'AA1', 'N', ' ', 'N', 'OW0', 'V', 'EH1', 'M', 'B', 'ER0', '.', ' ', 'TH', 'ER1', 'D', 'IY0', '.']\n","['h', 'ə', 'ˈ', 'l', 'o', 'ʊ', ',', 'ˈ', 'b', 'ɹ', 'o', 'ʊ', '.', 'ˈ', 'a', 'ɪ', ' ', 'ˈ', 'h', 'o', 'ʊ', 'p', ' ', 'ˈ', 'j', 'u', ' ', 'ˈ', 'k', 'æ', 'n', ' ', 'ˈ', 't', 'ʃ', 'u', 'z', ' ', 'ˌ', 's', 'ɪ', 'ɡ', 'ə', 'ˈ', 'ɹ', 'ɛ', 't', 's', ' ', 'ˈ', 'w', 'ɝ', 'θ', ' ', 'ˈ', 't', 'w', 'ɛ', 'n', 't', 'i', ' ', 'ˈ', 'd', 'ɑ', 'l', 'ɚ', 'z', ' ', 'ˈ', 't', 'ɛ', 'n', ' ', 'ˈ', 's', 'ɛ', 'n', 't', 's', ' ', 'ˈ', 'ɑ', 'n', ' ', 'ˈ', 'n', 'o', 'ʊ', 'v', '.', ' ', 'ˈ', 'θ', 'ɝ', 'ˌ', 'd', 'i', '.']\n"]}]},{"cell_type":"markdown","metadata":{"id":"ckRB7iWpUavz","pycharm":{"name":"#%% md\n"}},"source":["**Tokenization**"]},{"cell_type":"markdown","metadata":{"id":"Dznknw-e6vhV","pycharm":{"name":"#%% md\n"}},"source":["At the end of G2P we have a list of characters. In order for our model to process these characters, we need to convert them into numbers.\n","\n","To do this we have a vocabulary containing all characters in our alphabet. Each character gets assigned a fixed number, such that every time it shows up in the text it is replaced with that number.\n","\n","The numbers are not interpretable for the human eye, but suitable to be the input of the deep learning model - similarly to one-hot encoding during classification."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IFUjxsocUYz9","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["from nemo.collections.tts.torch.tts_tokenizers import EnglishPhonemesTokenizer, IPATokenizer\n","\n","arpabet_tokenizer = EnglishPhonemesTokenizer(arpabet_g2p)\n","ipa_tokenizer = IPATokenizer(ipa_g2p)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t8vdYwA94xnn","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["text = \"Hello world\"\n","arpabet_tokens = arpabet_tokenizer(text)\n","ipa_tokens = ipa_tokenizer(text)\n","\n","print(text)\n","print(arpabet_tokens)\n","print(ipa_tokens)"]},{"cell_type":"markdown","metadata":{"id":"zZhZ47vy5swC","pycharm":{"name":"#%% md\n"}},"source":["# 7.&nbsp;Spectrogram Synthesis"]},{"cell_type":"markdown","metadata":{"id":"cHXPTuQh7VOY","pycharm":{"name":"#%% md\n"}},"source":["The most complicated step is converting the text or phonemes into a spectrogram representing the spoken audio.\n","\n","If we check the general TTS block diagram again, we have now finished with the text processing part, and reached where we deal with the audio.\n","\n","<div>\n","<img src=\"https://raw.githubusercontent.com/NVIDIA/NeMo/stable/tutorials/tts/images/tts_pipeline.png\" width=\"500\", height=\"500\"/>\n","</div>\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"_yo7Ru_GMA0E","pycharm":{"name":"#%% md\n"}},"source":["## 7.1&nbsp;Audio"]},{"cell_type":"markdown","metadata":{"id":"7V-iJ0wl6PZP","pycharm":{"name":"#%% md\n"}},"source":["Reminder about signal processing:\n","\n","Audio is typically represented by a long sequence of numbers representing the audio amplitude at each point in time.\n","\n","How often the audio samples are recorded is the [sampling rate](https://en.wikipedia.org/wiki/Sampling_(signal_processing)). Common sampling rates are 16 kHz, 22.05 kHz, and 44.1 kHz, with higher sampling rates producing more accurate, higher quality audio.\n","\n","A sampling rate of 44.1 kHz means that we store 44,100 audio sample per second of audio. Each audio sample is typically stored as a 16-bit integer (a whole number ranging from -32,768 to +32,767). For machine learning, it is sometimes more convenient to rescale it and represent it as a continuous value between -1.0 and 1.0 using 32-bit floats.\n","\n","<br>\n","<center>\n","<img src=\"https://raw.githubusercontent.com/NVIDIA/NeMo/stable/tutorials/tts/images/sampling_rate.png\" width=\"800\", height=\"300\"/>\n","<figcaption>https://wiki.hydrogenaud.io/index.php?title=File:Digital_wave.png\n","</figcaption>\n","</center>"]},{"cell_type":"markdown","metadata":{"id":"C7K8pIkt6MH2","pycharm":{"name":"#%% md\n"}},"source":["## 7.2&nbsp;Spectrograms\n","\n","While raw audio shows amplitude versus time and is useful for easily recording and listening, it is not optimal when it comes to processing.\n","\n","For processing, it is usually preferable to represent the audio as a **spectrogram** which shows frequency versus time. Specifically, we:\n","\n","1.   Group together audio samples into a much smaller set of time buckets, called **audio frames**. An audio frame will usually bucket around 50ms of audio.\n","2.   For each audio frame, use the [Fast Fourier transform](https://en.wikipedia.org/wiki/Fast_Fourier_transform) (**FFT**) to calculate the magnitude (ie. energy, amplitude or \"loudness\") and phase (which we don't use) of each frequency bin. We refer to the magnitudes of the frequency bins as a spectrogram\n","3.   Map the original frequency bins onto the [mel scale](https://en.wikipedia.org/wiki/Mel_scale), using overlapped [triangular filters](https://en.wikipedia.org/wiki/Window_function#Triangular_window) to create mel filterbanks.\n","4.   Multiply the original spectrogram by the mel filterbanks to produce a mel spectrogram (for more details see [here](https://www.mathworks.com/help/audio/ref/melspectrogram.html)).\n","\n","We then use the mel spectrogram as our final audio representation. The only thing we lose during this process is the phase information, the implications of which we will discuss more later on.\n"]},{"cell_type":"markdown","metadata":{"id":"qbYSJqjKHVbU","pycharm":{"name":"#%% md\n"}},"source":["## 7.3&nbsp;Why use a spectrogram?\n"]},{"cell_type":"markdown","metadata":{"id":"uKYbiRNn6G2e","pycharm":{"name":"#%% md\n"}},"source":["\n","In addition to the mel spectrogram providing handcrafted features that are closer to human perception and easier to predict, there are a few other advantages to using it over audio samples.\n","\n","**1. Computational Efficiency**\n","\n","One reason to use a spectrogram is that it is a lot more computationally efficient than processing raw audio.\n","\n","Take for example a 10 second piece of audio sampled at 44.1 kHz.\n","\n","This audio has 10 * 44,100 = 441,000 audio samples.\n","\n","For TTS we will represent this same audio with audio frames that are overlapping such that there is about 1 audio frame per 10ms (0.01s). For each audio frame we have 80 frequency bands.\n","\n","Our final spectrogram has 80 bands * 10s * / (0.01s) = 80,000\n","\n","So we made our data about 5 times smaller.\n","\n","Even in other fields that deal with audio, such as *digital signal processing (DSP)*, it is common practice to reduce computation time by computing the FFT, running mathematical calculations and manipulations in the frequency domain, and then converting the final spectrogram back to audio with the *inverse* FFT.\n","\n","**2. Shorter 2D sequence length**\n","\n","In the example above, the dimension of our input goes from being (441,000, 1) to (1000, 80). Instead of having a very long 1-dimensional time series, we instead have a much shorter sequence of multi-dimensional features.\n","\n","This dimensionality works better with most modern deep learning models.\n","\n","Most models work better representing large chunks/sequences of information as higher dimension vectors (eg. *embeddings*).\n","\n","**RNN/LSTM** architectures have latency proportional to the length of the sequence, can struggle to remember information for sequences over a few hundred tokens long, and are more prone to vanishing/exploding gradients as the sequence gets longer.\n","\n","With 2 dimensions we can effectively use **CNNs** by running [temporal convolutions](https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html?highlight=conv1d#torch.nn.Conv1d) over the time dimension. Or by applying [2d convolutions](https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html?highlight=conv2d#torch.nn.Conv2d) to the spectrogram exactly as if it were an image in computer vision.\n","\n","**Transformers** require computation/memory that is proportional to the length of the sequence squared. This means we can easily use large transformers for relatively short sequences like in NLP, smaller transformers for longer sequences like spectrogram data, and are impractical to use on very long sequences like audio samples."]},{"cell_type":"markdown","metadata":{"id":"dUDB6f9h6G1Q","pycharm":{"name":"#%% md\n"}},"source":["## 7.4&nbsp;End to end example"]},{"cell_type":"markdown","metadata":{"id":"PsPn56E_Jax4","pycharm":{"name":"#%% md\n"}},"source":["Before we go into the details of how this works, let's go through an end-to-end text to audio example so we can visualize what our model inputs and outputs look and sound like.\n","\n","To do this, we will need to use both the spectrogram and vocoder models together. The vocoder will be looked at more thoroughly in the *audio synthesis* section."]},{"cell_type":"code","execution_count":19,"metadata":{"id":"hy-Z4U7LxR9e","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732978848899,"user_tz":-480,"elapsed":253,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"738927e0-de98-4679-f84b-db0bed958ed0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Spectrogram Models\n","[PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_fastpitch,\n","\tdescription=This model is trained on LJSpeech sampled at 22050Hz with and can be used to generate female English voices with an American accent. It is ARPABET-based.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_fastpitch/versions/1.8.1/files/tts_en_fastpitch_align.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_fastpitch_ipa,\n","\tdescription=This model is trained on LJSpeech sampled at 22050Hz with and can be used to generate female English voices with an American accent. It is IPA-based.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_fastpitch/versions/IPA_1.13.0/files/tts_en_fastpitch_align_ipa.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_fastpitch_multispeaker,\n","\tdescription=This model is trained on HiFITTS sampled at 44100Hz with and can be used to generate male and female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_multispeaker_fastpitchhifigan/versions/1.10.0/files/tts_en_fastpitch_multispeaker.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_de_fastpitch_singleSpeaker_thorstenNeutral_2102,\n","\tdescription=This model is trained on a single male speaker data in Thorsten Müller’s German Neutral 21.02 Dataset sampled at 22050Hz and can be used to generate male German voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_de_fastpitchhifigan/versions/1.15.0/files/tts_de_fastpitch_thorstens2102.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_de_fastpitch_singleSpeaker_thorstenNeutral_2210,\n","\tdescription=This model is trained on a single male speaker data in Thorsten Müller’s German Neutral 22.10 Dataset sampled at 22050Hz and can be used to generate male German voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_de_fastpitchhifigan/versions/1.15.0/files/tts_de_fastpitch_thorstens2210.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_de_fastpitch_multispeaker_5,\n","\tdescription=This model is trained on 5 speakers in HUI-Audio-Corpus-German clean subset sampled at 44100Hz with and can be used to generate male and female German voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_de_fastpitch_multispeaker_5/versions/1.11.0/files/tts_de_fastpitch_multispeaker_5.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_es_fastpitch_multispeaker,\n","\tdescription=This model is trained on 174 speakers in 6 crowdsourced Latin American Spanish OpenSLR datasets sampled at 44100Hz and can be used to generate male and female Spanish voices with Latin American accents.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_es_multispeaker_fastpitchhifigan/versions/1.15.0/files/tts_es_fastpitch_multispeaker.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_zh_fastpitch_sfspeech,\n","\tdescription=This model is trained on a single female speaker in SFSpeech Bilingual Chinese/English dataset sampled at 22050Hz and can be used to generate female Mandarin Chinese voices. It is improved using richer dict and jieba word segmenter for polyphone disambiguation.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_zh_fastpitch_hifigan_sfspeech/versions/1.15.0/files/tts_zh_fastpitch_sfspeech.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_fastpitch_for_asr_finetuning,\n","\tdescription=This model is trained on LibriSpeech, train-960 subset. STFT parameters follow those commonly used in ASR: 25 ms window, 10 ms hop. This model is supposed to be used with its companion SpetrogramEnhancer for  ASR fine-tuning. Usage for regular TTS tasks is not advised.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_fastpitch_spectrogram_enhancer_for_asr_finetuning/versions/1.20.0/files/tts_en_fastpitch_for_asr_finetuning.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.fastpitch.FastPitchModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_lj_mixertts,\n","\tdescription=This model is trained on LJSpeech sampled at 22050Hz with and can be used to generate female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_lj_mixertts/versions/1.6.0/files/tts_en_lj_mixertts.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.mixer_tts.MixerTTSModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_lj_mixerttsx,\n","\tdescription=This model is trained on LJSpeech sampled at 22050Hz with and can be used to generate female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_lj_mixerttsx/versions/1.6.0/files/tts_en_lj_mixerttsx.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.mixer_tts.MixerTTSModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_tacotron2,\n","\tdescription=This model is trained on LJSpeech sampled at 22050Hz, and can be used to generate female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_tacotron2/versions/1.10.0/files/tts_en_tacotron2.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.tacotron2.Tacotron2Model'>\n",")]\n","\n","Vocoders\n","[PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_waveglow_88m,\n","\tdescription=This model is trained on LJSpeech sampled at 22050Hz, and has been tested on generating female English voices with an American accent and Mandarin voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_waveglow_88m/versions/1.0.0/files/tts_waveglow.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.waveglow.WaveGlowModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_hifigan,\n","\tdescription=This model is trained on LJSpeech audio sampled at 22050Hz and mel spectrograms generated from Tacotron2, TalkNet, and FastPitch. This model has been tested on generating female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_hifigan/versions/1.0.0rc1/files/tts_hifigan.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_lj_hifigan_ft_mixertts,\n","\tdescription=This model is trained on LJSpeech audio sampled at 22050Hz and mel spectrograms generated from Mixer-TTS. This model has been tested on generating female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_lj_hifigan/versions/1.6.0/files/tts_en_lj_hifigan_ft_mixertts.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_lj_hifigan_ft_mixerttsx,\n","\tdescription=This model is trained on LJSpeech audio sampled at 22050Hz and mel spectrograms generated from Mixer-TTS-X. This model has been tested on generating female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_lj_hifigan/versions/1.6.0/files/tts_en_lj_hifigan_ft_mixerttsx.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_hifitts_hifigan_ft_fastpitch,\n","\tdescription=This model is trained on HiFiTTS audio sampled at 44100Hz and mel spectrograms generated from FastPitch. This model has been tested on generating male and female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_multispeaker_fastpitchhifigan/versions/1.10.0/files/tts_en_hifitts_hifigan_ft_fastpitch.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_de_hifigan_singleSpeaker_thorstenNeutral_2102,\n","\tdescription=This model is finetuned from the HiFiGAN pretrained checkpoint `tts_en_lj_hifigan_ft_mixerttsx` by the mel-spectrograms generated from the FastPitch checkpoint `tts_de_fastpitch_singleSpeaker_thorstenNeutral_2102`. This model has been tested on generating male German neutral voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_de_fastpitchhifigan/versions/1.15.0/files/tts_de_hifigan_thorstens2102.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_de_hifigan_singleSpeaker_thorstenNeutral_2210,\n","\tdescription=This model is finetuned from the HiFiGAN pretrained checkpoint `tts_en_lj_hifigan_ft_mixerttsx` by the mel-spectrograms generated from the FastPitch checkpoint `tts_de_fastpitch_singleSpeaker_thorstenNeutral_2210`. This model has been tested on generating male German neutral voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_de_fastpitchhifigan/versions/1.15.0/files/tts_de_hifigan_thorstens2210.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_de_hui_hifigan_ft_fastpitch_multispeaker_5,\n","\tdescription=This model is finetuned from the HiFiGAN pretrained checkpoint `tts_en_hifitts_hifigan_ft_fastpitch` by the mel-spectrograms generated from the FastPitch checkpoint `tts_de_fastpitch_multispeaker_5`. This model has been tested on generating male and female German voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_de_fastpitch_multispeaker_5/versions/1.11.0/files/tts_de_hui_hifigan_ft_fastpitch_multispeaker_5.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_es_hifigan_ft_fastpitch_multispeaker,\n","\tdescription=This model is trained on the audio from 6 crowdsourced Latin American Spanish OpenSLR datasets and finetuned on the mel-spectrograms generated from the FastPitch checkpoint `tts_es_fastpitch_multispeaker`. This model has been tested on generating male and female Spanish voices with Latin American accents.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_es_multispeaker_fastpitchhifigan/versions/1.15.0/files/tts_es_hifigan_ft_fastpitch_multispeaker.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_zh_hifigan_sfspeech,\n","\tdescription=This model is finetuned from the HiFiGAN pretrained checkpoint `tts_en_lj_hifigan_ft_mixerttsx` by the mel-spectrograms generated from the FastPitch checkpoint `tts_zh_fastpitch_sfspeech`. This model has been tested on generating female Mandarin Chinese voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_zh_fastpitch_hifigan_sfspeech/versions/1.15.0/files/tts_zh_hifigan_sfspeech.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.hifigan.HifiGanModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_lj_univnet,\n","\tdescription=This model is trained on LJSpeech sampled at 22050Hz, and has been tested on generating female English voices with an American accent.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_lj_univnet/versions/1.7.0/files/tts_en_lj_univnet.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.univnet.UnivNetModel'>\n","), PretrainedModelInfo(\n","\tpretrained_model_name=tts_en_libritts_univnet,\n","\tdescription=This model is trained on all LibriTTS training data (train-clean-100, train-clean-360, and train-other-500) sampled at 22050Hz, and has been tested on generating English voices.,\n","\tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_libritts_univnet/versions/1.7.0/files/tts_en_libritts_multispeaker_univnet.nemo,\n","\tclass_=<class 'nemo.collections.tts.models.univnet.UnivNetModel'>\n",")]\n"]}],"source":["import torch\n","import IPython.display as ipd\n","from matplotlib.pyplot import imshow\n","from matplotlib import pyplot as plt\n","from nemo.collections.tts.models.base import SpectrogramGenerator, Vocoder\n","\n","# List pretrained models available in NeMo\n","print(\"Spectrogram Models\")\n","print(SpectrogramGenerator.list_available_models())\n","\n","print()\n","print(\"Vocoders\")\n","print(Vocoder.list_available_models())"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"-KuBkFKrKzxn","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732979246416,"user_tz":-480,"elapsed":53480,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"aaca0f14-25c9-4d2a-d11b-3e7aafefca62"},"outputs":[{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 15:06:32 cloud:68] Downloading from: https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_tacotron2/versions/1.10.0/files/tts_en_tacotron2.nemo to /root/.cache/torch/NeMo/NeMo_1.21.0/tts_en_tacotron2/319a832e78fac50399d90aee0f083927/tts_en_tacotron2.nemo\n","[NeMo I 2024-11-30 15:06:34 common:913] Instantiating model from pre-trained checkpoint\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 15:07:11 en_us_arpabet:66] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n","[NeMo W 2024-11-30 15:07:12 modelPT:161] If you intend to do training or fine-tuning, please call the ModelPT.setup_training_data() method and provide a valid configuration file to setup the train data loader.\n","    Train config : \n","    dataset:\n","      _target_: nemo.collections.tts.torch.data.TTSDataset\n","      manifest_filepath: /raid/datasets/tts_data/train_manifest.json\n","      sample_rate: 22050\n","      sup_data_path: null\n","      sup_data_types: null\n","      n_fft: 1024\n","      win_length: 1024\n","      hop_length: 256\n","      window: hann\n","      n_mels: 80\n","      lowfreq: 0\n","      highfreq: 8000\n","      max_duration: null\n","      min_duration: 0.1\n","      ignore_file: null\n","      trim: false\n","      pitch_fmin: 65.40639132514966\n","      pitch_fmax: 2093.004522404789\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: true\n","      batch_size: 48\n","      num_workers: 4\n","      pin_memory: false\n","    \n","[NeMo W 2024-11-30 15:07:12 modelPT:168] If you intend to do validation, please call the ModelPT.setup_validation_data() or ModelPT.setup_multiple_validation_data() method and provide a valid configuration file to setup the validation data loader(s). \n","    Validation config : \n","    dataset:\n","      _target_: nemo.collections.tts.torch.data.TTSDataset\n","      manifest_filepath: /raid/datasets/tts_data/train_manifest.json\n","      sample_rate: 22050\n","      sup_data_path: null\n","      sup_data_types: null\n","      n_fft: 1024\n","      win_length: 1024\n","      hop_length: 256\n","      window: hann\n","      n_mels: 80\n","      lowfreq: 0\n","      highfreq: 8000\n","      max_duration: null\n","      min_duration: 0.1\n","      ignore_file: null\n","      trim: false\n","      pitch_fmin: 65.40639132514966\n","      pitch_fmax: 2093.004522404789\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: false\n","      batch_size: 24\n","      num_workers: 8\n","      pin_memory: false\n","    \n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 15:07:12 features:289] PADDING: 16\n","[NeMo I 2024-11-30 15:07:12 features:297] STFT using exact pad\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 15:07:12 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/nemo/core/connectors/save_restore_connector.py:568: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","      return torch.load(model_weights, map_location='cpu')\n","    \n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 15:07:12 save_restore_connector:249] Model Tacotron2Model was successfully restored from /root/.cache/torch/NeMo/NeMo_1.21.0/tts_en_tacotron2/319a832e78fac50399d90aee0f083927/tts_en_tacotron2.nemo.\n","[NeMo I 2024-11-30 15:07:12 cloud:68] Downloading from: https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_hifigan/versions/1.0.0rc1/files/tts_hifigan.nemo to /root/.cache/torch/NeMo/NeMo_1.21.0/tts_hifigan/e6da322f0f7e7dcf3f1900a9229a7e69/tts_hifigan.nemo\n","[NeMo I 2024-11-30 15:07:17 common:913] Instantiating model from pre-trained checkpoint\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 15:07:24 modelPT:161] If you intend to do training or fine-tuning, please call the ModelPT.setup_training_data() method and provide a valid configuration file to setup the train data loader.\n","    Train config : \n","    dataset:\n","      _target_: nemo.collections.tts.data.datalayers.MelAudioDataset\n","      manifest_filepath: /home/fkreuk/data/train_finetune.txt\n","      min_duration: 0.75\n","      n_segments: 8192\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: true\n","      batch_size: 64\n","      num_workers: 4\n","    \n","[NeMo W 2024-11-30 15:07:24 modelPT:168] If you intend to do validation, please call the ModelPT.setup_validation_data() or ModelPT.setup_multiple_validation_data() method and provide a valid configuration file to setup the validation data loader(s). \n","    Validation config : \n","    dataset:\n","      _target_: nemo.collections.tts.data.datalayers.MelAudioDataset\n","      manifest_filepath: /home/fkreuk/data/val_finetune.txt\n","      min_duration: 3\n","      n_segments: 66150\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: false\n","      batch_size: 5\n","      num_workers: 4\n","    \n","[NeMo W 2024-11-30 15:07:24 features:266] Using torch_stft is deprecated and has been removed. The values have been forcibly set to False for FilterbankFeatures and AudioToMelSpectrogramPreprocessor. Please set exact_pad to True as needed.\n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 15:07:24 features:289] PADDING: 0\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 15:07:24 features:266] Using torch_stft is deprecated and has been removed. The values have been forcibly set to False for FilterbankFeatures and AudioToMelSpectrogramPreprocessor. Please set exact_pad to True as needed.\n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 15:07:24 features:289] PADDING: 0\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 15:07:24 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/torch/nn/utils/weight_norm.py:143: FutureWarning: `torch.nn.utils.weight_norm` is deprecated in favor of `torch.nn.utils.parametrizations.weight_norm`.\n","      WeightNorm.apply(module, name, dim)\n","    \n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 15:07:25 save_restore_connector:249] Model HifiGanModel was successfully restored from /root/.cache/torch/NeMo/NeMo_1.21.0/tts_hifigan/e6da322f0f7e7dcf3f1900a9229a7e69/tts_hifigan.nemo.\n"]}],"source":["if torch.cuda.is_available():\n","  device = \"cuda\"\n","else:\n","  device = \"cpu\"\n","\n","# Remarks:\n","# - Tacotron2 is a specific text-to-mel-spectogram generator (see DL theoretical lecture slides)\n","# - HiFiGAN is a specific mel-spectogram-to-audio generator, also called as vocoder (see DL theoretical lecture slides)\n","\n","# Load our spectrogram and vocoder models onto our CPU\n","spectrogram_model = SpectrogramGenerator.from_pretrained(\"tts_en_tacotron2\").eval().to(device)\n","vocoder = Vocoder.from_pretrained(\"tts_en_hifigan\").eval().to(device)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6_brQ8_WBlX_","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["text = \"This audio was generated with a text-to-speech model.\"\n","\n","# Normalize the text and convert it into individual phonemes/tokens.\n","tokens = spectrogram_model.parse(text, normalize=True)\n","\n","# Generate spectrogram from text\n","spectrogram = spectrogram_model.generate_spectrogram(tokens=tokens)\n","\n","# Invert the spectrogram into audio samples\n","audio = vocoder.convert_spectrogram_to_audio(spec=spectrogram)\n","\n","# Convert output from pytorch tensor to numpy array\n","spectrogram = spectrogram.cpu().detach().numpy()[0]\n","audio = audio.cpu().detach().numpy()[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"m3VcVblUHA7g","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["# see the text and listen to the audio, generated by text-to-speech synthesis (using Tacotron2 and HiFiGAN)\n","print(f'\"{text}\"\\n')\n","\n","ipd.Audio(audio, rate=22050)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ze1JIDxeHJq5","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["# Visualize the spectrogram\n","imshow(spectrogram, origin=\"lower\")\n","plt.xlabel(\"Audio Frame\")\n","plt.ylabel(\"Frequency Band\")\n","plt.show()"]},{"cell_type":"code","source":["### YOUR TASK:\n","# in the 'spectrogram_model', disable the text normalization\n","# get your original sentence, before text normalization\n","# and convert the un-normalized text to speech with the models above!\n","# (expected result: you will hear that text processing is an important step of TTS)"],"metadata":{"id":"KxfnKqkc21V8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### YOUR SOLUTION"],"metadata":{"id":"tvkmSibw3G7v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(text2)\n","tokens = spectrogram_model.parse(text2, normalize=False)\n","\n","spectrogram = spectrogram_model.generate_spectrogram(tokens=tokens)\n","\n","audio = vocoder.convert_spectrogram_to_audio(spec=spectrogram)\n","\n","spectrogram = spectrogram.cpu().detach().numpy()[0]\n","audio = audio.cpu().detach().numpy()[0]\n","print(f'\"{text2}\"\\n')\n","\n","ipd.Audio(audio, rate=22050)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":251},"id":"U-m9CpiWmGmN","executionInfo":{"status":"ok","timestamp":1732979748281,"user_tz":-480,"elapsed":1687,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"2c6c02ac-f41c-410d-9bc2-0dc7c8b86b59"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 15:15:46 tts_tokenizers:477] Text: [hello,BROW1.AY1 HHOW1P YUW1 can CHUW1Z SIH2GAH0REH1TS WER1TH $20.1 on NOW1V.30 . ] contains unknown char/phoneme: [$].Original text: [Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . ]. Symbol will be skipped.\n","[NeMo W 2024-11-30 15:15:46 tts_tokenizers:477] Text: [hello,BROW1.AY1 HHOW1P YUW1 can CHUW1Z SIH2GAH0REH1TS WER1TH $20.1 on NOW1V.30 . ] contains unknown char/phoneme: [2].Original text: [Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . ]. Symbol will be skipped.\n","[NeMo W 2024-11-30 15:15:46 tts_tokenizers:477] Text: [hello,BROW1.AY1 HHOW1P YUW1 can CHUW1Z SIH2GAH0REH1TS WER1TH $20.1 on NOW1V.30 . ] contains unknown char/phoneme: [0].Original text: [Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . ]. Symbol will be skipped.\n","[NeMo W 2024-11-30 15:15:46 tts_tokenizers:477] Text: [hello,BROW1.AY1 HHOW1P YUW1 can CHUW1Z SIH2GAH0REH1TS WER1TH $20.1 on NOW1V.30 . ] contains unknown char/phoneme: [1].Original text: [Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . ]. Symbol will be skipped.\n","[NeMo W 2024-11-30 15:15:46 tts_tokenizers:477] Text: [hello,BROW1.AY1 HHOW1P YUW1 can CHUW1Z SIH2GAH0REH1TS WER1TH $20.1 on NOW1V.30 . ] contains unknown char/phoneme: [3].Original text: [Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . ]. Symbol will be skipped.\n","[NeMo W 2024-11-30 15:15:46 tts_tokenizers:477] Text: [hello,BROW1.AY1 HHOW1P YUW1 can CHUW1Z SIH2GAH0REH1TS WER1TH $20.1 on NOW1V.30 . ] contains unknown char/phoneme: [0].Original text: [Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . ]. Symbol will be skipped.\n"]},{"output_type":"stream","name":"stdout","text":["Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . \n","\"Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . \"\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<IPython.lib.display.Audio object>"],"text/html":["\n","                <audio  controls=\"controls\" >\n","                    <source src=\"data:audio/wav;base64,\" type=\"audio/wav\" />\n","                    Your browser does not support the audio element.\n","                </audio>\n","              "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["### YOUR TASK:\n","# write a sentence in your native language, and try to synthesize with Tacotron2 and HiFiGAN.\n","# can you understand any part of that?\n","# (expected result: it will be speech-like, but in general with weak quality; because TTS systems depend on the language)"],"metadata":{"id":"4cLh7jwV3mGx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### YOUR SOLUTION"],"metadata":{"id":"oeEUGEuD39vL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OgthvHUzHeE6","pycharm":{"name":"#%% md\n"}},"source":["## 7.5&nbsp;Model types"]},{"cell_type":"markdown","metadata":{"id":"5QQt3p9a82gN","pycharm":{"name":"#%% md\n"}},"source":["Predicting a spectrogram from text is a **sequence-to-sequence** problem because the input and output are different lengths. The length of the output is itself ambiguous, and something the model needs to predict.\n","\n","Most successful approaches to this problem use an **encoder-decoder** system. The typical pattern looks like:\n","\n","1.   The model has a **character embedding** for each character in its vocabulary. This is usually learned from scratch during training, but can also be pre-trained or augmented with generic language embeddings like *BERT*.\n","2.   The **encoder** analyzes the input sentence and applies various transformations to each character embedding in the output sequence. The *encoder outputs* are character embeddings that represent how each character should be *pronounced*, given the sentence. Encoders will also usually encode the approximate length, or **duration**, of each character.\n","3.   The **decoder** predicts the spectrogram using the sequence of character pronunciation embeddings provided by the encoder.\n","\n","Most model architectures rely on **RNNs** or **Transformers** to do sentence-level processing (like how to pronounce or emphasize certain words based on the meaning of the sentence), and **CNNs** to process features based on their adjacent characters or audio frames (like how to start and end a word to make it flow naturally with the previous and next words).\n","\n","Today there are two main categories of these encoder-decoder systems: **auto-regressive** models and **parallel** models. Within these categories, parallel models typically use **duration prediction**, while auto-regressive models can use duration prediction or **attention**."]},{"cell_type":"markdown","metadata":{"id":"H8rkeCkHMrev","pycharm":{"name":"#%% md\n"}},"source":["## 7.6&nbsp;Auto Regressive Models"]},{"cell_type":"markdown","metadata":{"id":"lGVKcJp6Y7Kv","pycharm":{"name":"#%% md\n"}},"source":["### 7.6.1&nbsp;Tacotron 2"]},{"cell_type":"markdown","metadata":{"id":"O0q5_nb6SfQT","pycharm":{"name":"#%% md\n"}},"source":["The first good neural TTS models were auto-regressive models such as [Tacotron 2](https://google.github.io/tacotron/publications/tacotron2/index.html).\n","\n","For these models, the encoder encodes the input sentence, and then the decoder predicts the spectrogram one audio frame at a time. This lets the model condition each spectrogram frame on the frames before it, producing high quality audio.\n","\n","Let's take a quick look at the Tacotron 2 architecture.\n","\n","<br>\n","<div>\n","<img src=\"https://raw.githubusercontent.com/NVIDIA/NeMo/stable/tutorials/tts/images/tacotron2_diagram.png\" width=\"600\", height=\"500\"/>\n","</div>\n","\n","The model is fairly complex. At a high level, it contains:\n","\n","1.   A CNN-RNN *encoder* which uses a bidirectional LSTM to analyze the entire sentence forward and backwards to figure out the pronunciation of every character.\n","2.   A unidirectional LSTM *decoder* which predicts the spectrogram one frame at a time.\n","3.   An **attention** mechanism that the decoder uses to determine which character(s) to look at when generating specific audio frames.\n","4.   A *stop token* layer which predicts a single number [0, 1] to determine the probability that the decoder has reached the end of the sentence.\n","5.   A *pre-net* that feeds the previous predicted frame into the decoder before predicting the next frame. This is used primarily for **teacher forcing** so that the model can learn effectively.\n","6.   A *post-net* which post-processes the entire spectrogram produced by the decoder to fix inconsistencies and smooth it out.\n","\n","The attention and teacher forcing mechanisms are the main characteristics that define the auto-regressive model and differentiate it from non-auto-regressive systems. These will be discussed in more detail below.\n","\n","The post-net is an optional optimization.\n","\n","The specifics of the encoder and decoder are not too important, and can be replaced with any equivalent combination of RNN, CNN, and/or Transformer blocks.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"wmGmNcT8LJGp","pycharm":{"name":"#%% md\n"}},"source":["### 7.6.2&nbsp;Attention and Alignment"]},{"cell_type":"markdown","metadata":{"id":"wunvHeLVEd45","pycharm":{"name":"#%% md\n"}},"source":["An auto-regressive model predicts the spectrogram based primarily on the encoder output features. For the output to make sense, each audio frame produced needs to be based on a subset of the characters in the input. Which character(s) the decoder is using when it predicts an audio frame is called its **attention**.\n","\n","First, let's see what our Tacotron 2 attention looks like."]},{"cell_type":"code","execution_count":38,"metadata":{"id":"rILddgvkw8om","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732982368904,"user_tz":-480,"elapsed":337,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"66de0488-291a-4f43-c8fc-c8231952636a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[PretrainedModelInfo(\n"," \tpretrained_model_name=tts_en_tacotron2,\n"," \tdescription=This model is trained on LJSpeech sampled at 22050Hz, and can be used to generate female English voices with an American accent.,\n"," \tlocation=https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_tacotron2/versions/1.10.0/files/tts_en_tacotron2.nemo,\n"," \tclass_=<class 'nemo.collections.tts.models.tacotron2.Tacotron2Model'>\n"," )]"]},"metadata":{},"execution_count":38}],"source":["import torch\n","from nemo.collections.tts.models import Tacotron2Model\n","\n","Tacotron2Model.list_available_models()"]},{"cell_type":"code","execution_count":39,"metadata":{"id":"CIzlpQTH7GZ6","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732982411389,"user_tz":-480,"elapsed":38413,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"97c281b8-2ed2-4421-966f-77e4e61c97ff"},"outputs":[{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 15:59:32 cloud:58] Found existing object /root/.cache/torch/NeMo/NeMo_1.21.0/tts_en_tacotron2/319a832e78fac50399d90aee0f083927/tts_en_tacotron2.nemo.\n","[NeMo I 2024-11-30 15:59:32 cloud:64] Re-using file from: /root/.cache/torch/NeMo/NeMo_1.21.0/tts_en_tacotron2/319a832e78fac50399d90aee0f083927/tts_en_tacotron2.nemo\n","[NeMo I 2024-11-30 15:59:32 common:913] Instantiating model from pre-trained checkpoint\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 16:00:08 en_us_arpabet:66] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n","[NeMo W 2024-11-30 16:00:08 modelPT:161] If you intend to do training or fine-tuning, please call the ModelPT.setup_training_data() method and provide a valid configuration file to setup the train data loader.\n","    Train config : \n","    dataset:\n","      _target_: nemo.collections.tts.torch.data.TTSDataset\n","      manifest_filepath: /raid/datasets/tts_data/train_manifest.json\n","      sample_rate: 22050\n","      sup_data_path: null\n","      sup_data_types: null\n","      n_fft: 1024\n","      win_length: 1024\n","      hop_length: 256\n","      window: hann\n","      n_mels: 80\n","      lowfreq: 0\n","      highfreq: 8000\n","      max_duration: null\n","      min_duration: 0.1\n","      ignore_file: null\n","      trim: false\n","      pitch_fmin: 65.40639132514966\n","      pitch_fmax: 2093.004522404789\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: true\n","      batch_size: 48\n","      num_workers: 4\n","      pin_memory: false\n","    \n","[NeMo W 2024-11-30 16:00:08 modelPT:168] If you intend to do validation, please call the ModelPT.setup_validation_data() or ModelPT.setup_multiple_validation_data() method and provide a valid configuration file to setup the validation data loader(s). \n","    Validation config : \n","    dataset:\n","      _target_: nemo.collections.tts.torch.data.TTSDataset\n","      manifest_filepath: /raid/datasets/tts_data/train_manifest.json\n","      sample_rate: 22050\n","      sup_data_path: null\n","      sup_data_types: null\n","      n_fft: 1024\n","      win_length: 1024\n","      hop_length: 256\n","      window: hann\n","      n_mels: 80\n","      lowfreq: 0\n","      highfreq: 8000\n","      max_duration: null\n","      min_duration: 0.1\n","      ignore_file: null\n","      trim: false\n","      pitch_fmin: 65.40639132514966\n","      pitch_fmax: 2093.004522404789\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: false\n","      batch_size: 24\n","      num_workers: 8\n","      pin_memory: false\n","    \n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 16:00:08 features:289] PADDING: 16\n","[NeMo I 2024-11-30 16:00:08 features:297] STFT using exact pad\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 16:00:08 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/nemo/core/connectors/save_restore_connector.py:568: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","      return torch.load(model_weights, map_location='cpu')\n","    \n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 16:00:09 save_restore_connector:249] Model Tacotron2Model was successfully restored from /root/.cache/torch/NeMo/NeMo_1.21.0/tts_en_tacotron2/319a832e78fac50399d90aee0f083927/tts_en_tacotron2.nemo.\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo E 2024-11-30 16:00:09 en_us_arpabet:104] Torch distributed needs to be initialized before you initialized EnglishG2p. This class is prone to data access race conditions. Now downloading corpora from global rank 0. If other ranks pass this before rank 0, errors might result.\n","[NeMo W 2024-11-30 16:00:09 en_us_arpabet:121] English g2p_dict will be used from nltk.corpus.cmudict.dict(), because phoneme_dict_path=None. Note that nltk.corpus.cmudict.dict() has old version (0.6) of CMUDict. You can use the latest official version of CMUDict (0.7b) with additional changes from NVIDIA directly from NeMo using the path scripts/tts_dataset_files/cmudict-0.7b_nv22.10.\n","[NeMo W 2024-11-30 16:00:10 en_us_arpabet:66] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n"]}],"source":["# this step is a bit slow, might take a few minutes\n","\n","tacotron2_model = Tacotron2Model.from_pretrained(\"tts_en_tacotron2\").eval().to(device)\n","tacotron2_model.calculate_loss = False\n","\n","g2p = EnglishG2p(ignore_ambiguous_words=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KGxEWnwhjrUQ","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["text = \"This is an attention map.\"\n","\n","tokens = tacotron2_model.parse(text, normalize=True)\n","token_len = torch.tensor([tokens.shape[1]], dtype=torch.long, device=spectrogram_model.device)\n","\n","_, _, _, alignments, _ = tacotron2_model.forward(tokens=tokens, token_len=token_len)\n","alignment = alignments[0].cpu().detach().numpy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KW2bN2wh9vTj","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["# Pretrained Tacotron 2 uses grapheme input with beginning-of-speech and end-of-speech tokens\n","characters = [\"<BOS>\"] + [char for char in text] + [\"<EOS>\"]\n","\n","fig, ax = plt.subplots(figsize=(10, 8))\n","plt.xlabel(\"Audio Frame\")\n","plt.ylabel(\"Character\")\n","_ = ax.imshow(alignment.transpose(), origin='upper', aspect='auto')\n","_ = ax.set_yticks(range(len(characters)))\n","_ = ax.set_yticklabels(characters)"]},{"cell_type":"code","source":["### YOUR TASK: test the attention mechanism on a longer sentence\n","# (e.g. on one of your earlier examples)"],"metadata":{"id":"a9notk0YArEE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### YOUR SOLUTION"],"metadata":{"id":"xor1UQqfA4S_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(text2)\n","\n","tokens = tacotron2_model.parse(text2, normalize=True)\n","token_len = torch.tensor([tokens.shape[1]], dtype=torch.long, device=spectrogram_model.device)\n","\n","_, _, _, alignments, _ = tacotron2_model.forward(tokens=tokens, token_len=token_len)\n","alignment = alignments[0].cpu().detach().numpy()\n","\n","characters = [\"<BOS>\"] + [char for char in text2] + [\"<EOS>\"]\n","\n","fig, ax = plt.subplots(figsize=(30, 24))\n","plt.xlabel(\"Audio Frame\")\n","plt.ylabel(\"Character\")\n","_ = ax.imshow(alignment.transpose(), origin='upper', aspect='auto')\n","_ = ax.set_yticks(range(len(characters)))\n","_ = ax.set_yticklabels(characters)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"2N4kpNfQy8sl","executionInfo":{"status":"ok","timestamp":1732982429410,"user_tz":-480,"elapsed":2522,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"92c863bb-b530-40d4-f13b-af3662603159"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello,bro.I hope you can choose cigarettes worth $20.1 on Nov.30 . \n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 3000x2400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"kIYrbaDDI7--","pycharm":{"name":"#%% md\n"}},"source":["In order to get good quality output, we need our model's attention to follow these constraints:\n","\n","*   The decoder should pay attention to one character at a time (sometimes it also places weight on the one character immediately before and/or after it).\n","*   The attention should be **monotonically increasing**, meaning it never go backwards in the text sequence. So the attention should only ever stay on the current character, or move forward to the next character.\n","*   The model should start on the first character in the sequence and end on the last character.\n","\n","These constraints result in the decoder effectively \"reading\" the text character by character or word by word, similar to how humans read aloud.\n","\n","A model may need to be trained for a while before its attention learns to follow these constraints. Before that, the attention may look non-sensical, and the model output will sound unintelligible.\n","\n","Once the models learns the above constraints and starts producing well-behaved attention maps, it is said that the model has **aligned**."]},{"cell_type":"markdown","metadata":{"id":"Z7SfuEJK6176","pycharm":{"name":"#%% md\n"}},"source":["## 7.8&nbsp;Parallel Models\n"]},{"cell_type":"markdown","metadata":{"id":"XOtPiRajZG2Z","pycharm":{"name":"#%% md\n"}},"source":["There are some significant weaknesses to auto-regressive systems. Most notably:\n","\n","*  Spectrograms are long (100s-1000s of frames), so generating them one frame at a time makes inference slow.\n","*  They are typically implemented using RNN based architectures, which are slow to train.\n","*  The user has little control over how the sentence is spoken.\n","\n","Using duration prediction enables us to remove the auto-regressive inference and predict every spectrogram frame in parallel. This makes the inference speed up to 100x faster, making it highly preferable for deploying and serving to users."]},{"cell_type":"markdown","metadata":{"id":"HgMfSDW5ZaE4","pycharm":{"name":"#%% md\n"}},"source":["### 7.8.1&nbsp;FastPitch"]},{"cell_type":"markdown","metadata":{"id":"FxsyNfSBRKqc","pycharm":{"name":"#%% md\n"}},"source":["In NeMo we support [FastPitch](https://fastpitch.github.io/), a parallel transformer-based model with pitch and duration control and prediction.\n","\n","<div>\n","<img src=\"https://raw.githubusercontent.com/NVIDIA/NeMo/stable/tutorials/tts/images/fastpitch_diagram.png\" width=\"600\", height=\"500\"/>\n","</div>\n","\n","At a high level it contains:\n","\n","1.   An encoder consisting of a **feed-forward transformer block (FFTr)**, which transforms the input character embeddings into character pronunciation embeddings.\n","2.   A temporal CNN which takes the encoder output and predicts the duration and pitch of each character. At training time, the ground truth pitch and duration information are fed to the model (similar to teacher forcing).\n","3.   Each encoder output is repeated a number of times equal to the predicted duration. The repeated encoder output is the same length as the final spectrogram. For example, for characters 'abc' and predicted durations (2, 3, 1) we get the encoder output repeated 'aabbbc'.\n","4.   A decoder consisting of a FFTr that transforms this encoder output into the predicted spectrogram.\n","\n","Some advantages to this approach are:\n","\n","*   The duration prediction makes the output consistent and robust.\n","*   The model inference is fast, able to synthesize up to 1000 seconds of audio every second on an A100 GPU.\n","*   You can customize the prosody by manually selecting the pitch and duration of each character or word."]},{"cell_type":"markdown","metadata":{"id":"UN_SIcPuBcQw","pycharm":{"name":"#%% md\n"}},"source":["Let's run the same inference for FastPitch that we did with Tacotron2. The main difference is loading the FastPitch checkpoint using the `FastPitchModel` class."]},{"cell_type":"code","execution_count":41,"metadata":{"id":"gRAkPzK4XkOu","pycharm":{"name":"#%%\n"},"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732982510781,"user_tz":-480,"elapsed":42604,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"ad9d6b34-2d7b-44c4-8f7e-f82c3cafb1e3"},"outputs":[{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 16:01:07 cloud:68] Downloading from: https://api.ngc.nvidia.com/v2/models/nvidia/nemo/tts_en_fastpitch/versions/1.8.1/files/tts_en_fastpitch_align.nemo to /root/.cache/torch/NeMo/NeMo_1.21.0/tts_en_fastpitch_align/b7d086a07b5126c12d5077d9a641a38c/tts_en_fastpitch_align.nemo\n","[NeMo I 2024-11-30 16:01:10 common:913] Instantiating model from pre-trained checkpoint\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 16:01:49 en_us_arpabet:66] apply_to_oov_word=None, This means that some of words will remain unchanged if they are not handled by any of the rules in self.parse_one_word(). This may be intended if phonemes and chars are both valid inputs, otherwise, you may see unexpected deletions in your input.\n","[NeMo W 2024-11-30 16:01:49 modelPT:161] If you intend to do training or fine-tuning, please call the ModelPT.setup_training_data() method and provide a valid configuration file to setup the train data loader.\n","    Train config : \n","    dataset:\n","      _target_: nemo.collections.tts.torch.data.TTSDataset\n","      manifest_filepath: /ws/LJSpeech/nvidia_ljspeech_train_clean_ngc.json\n","      sample_rate: 22050\n","      sup_data_path: /raid/LJSpeech/supplementary\n","      sup_data_types:\n","      - align_prior_matrix\n","      - pitch\n","      n_fft: 1024\n","      win_length: 1024\n","      hop_length: 256\n","      window: hann\n","      n_mels: 80\n","      lowfreq: 0\n","      highfreq: 8000\n","      max_duration: null\n","      min_duration: 0.1\n","      ignore_file: null\n","      trim: false\n","      pitch_fmin: 65.40639132514966\n","      pitch_fmax: 2093.004522404789\n","      pitch_norm: true\n","      pitch_mean: 212.35873413085938\n","      pitch_std: 68.52806091308594\n","      use_beta_binomial_interpolator: true\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: true\n","      batch_size: 24\n","      num_workers: 0\n","    \n","[NeMo W 2024-11-30 16:01:49 modelPT:168] If you intend to do validation, please call the ModelPT.setup_validation_data() or ModelPT.setup_multiple_validation_data() method and provide a valid configuration file to setup the validation data loader(s). \n","    Validation config : \n","    dataset:\n","      _target_: nemo.collections.tts.torch.data.TTSDataset\n","      manifest_filepath: /ws/LJSpeech/nvidia_ljspeech_val_clean_ngc.json\n","      sample_rate: 22050\n","      sup_data_path: /raid/LJSpeech/supplementary\n","      sup_data_types:\n","      - align_prior_matrix\n","      - pitch\n","      n_fft: 1024\n","      win_length: 1024\n","      hop_length: 256\n","      window: hann\n","      n_mels: 80\n","      lowfreq: 0\n","      highfreq: 8000\n","      max_duration: null\n","      min_duration: null\n","      ignore_file: null\n","      trim: false\n","      pitch_fmin: 65.40639132514966\n","      pitch_fmax: 2093.004522404789\n","      pitch_norm: true\n","      pitch_mean: 212.35873413085938\n","      pitch_std: 68.52806091308594\n","      use_beta_binomial_interpolator: true\n","    dataloader_params:\n","      drop_last: false\n","      shuffle: false\n","      batch_size: 24\n","      num_workers: 0\n","    \n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 16:01:49 features:289] PADDING: 1\n"]},{"output_type":"stream","name":"stderr","text":["[NeMo W 2024-11-30 16:01:49 nemo_logging:349] /usr/local/lib/python3.10/dist-packages/nemo/core/connectors/save_restore_connector.py:568: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","      return torch.load(model_weights, map_location='cpu')\n","    \n"]},{"output_type":"stream","name":"stdout","text":["[NeMo I 2024-11-30 16:01:49 save_restore_connector:249] Model FastPitchModel was successfully restored from /root/.cache/torch/NeMo/NeMo_1.21.0/tts_en_fastpitch_align/b7d086a07b5126c12d5077d9a641a38c/tts_en_fastpitch_align.nemo.\n"]}],"source":["# this step is a bit slow, might take a few minutes\n","\n","from nemo.collections.tts.models import FastPitchModel\n","\n","fastpitch_model = FastPitchModel.from_pretrained(\"tts_en_fastpitch\").eval().to(device)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jXaKddUKeTsz","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["text = \"This audio was generated with the fastpitch text-to-speech model.\"\n","\n","# Normalize the text and convert it into individual phonemes/tokens.\n","tokens = fastpitch_model.parse(text, normalize=True)\n","\n","# Generate spectrogram from text\n","spectrogram = fastpitch_model.generate_spectrogram(tokens=tokens)\n","\n","# Invert the spectrogram into audio samples\n","audio = vocoder.convert_spectrogram_to_audio(spec=spectrogram)\n","\n","# Convert output from pytorch tensor to numpy array\n","spectrogram = spectrogram.cpu().detach().numpy()[0]\n","audio = audio.cpu().detach().numpy()[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LIQ2s_1neeS5","pycharm":{"name":"#%%\n"}},"outputs":[],"source":["print(f'\"{text}\"\\n')\n","\n","ipd.Audio(audio, rate=22050)"]},{"cell_type":"code","source":["### YOUR TASK: use a single sentence, and synthesize by two models: listen to the audio, and plot the spectrograms!\n","# - Tacotron2 + HiFiGAN\n","# - FastPitch + HiFiGAN\n","# what are the differences that you can hear or see?"],"metadata":{"id":"iwE7ucKFEknw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### YOUR SOLUTION"],"metadata":{"id":"jgfYROz8H69Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["text4 = \"Please call me at night.\"\n","\n","tokens = spectrogram_model.parse(text4, normalize=True)\n","\n","# Generate spectrogram from text\n","spectrogram = spectrogram_model.generate_spectrogram(tokens=tokens)\n","\n","# Invert the spectrogram into audio samples\n","audio = vocoder.convert_spectrogram_to_audio(spec=spectrogram)\n","\n","# Convert output from pytorch tensor to numpy array\n","spectrogram = spectrogram.cpu().detach().numpy()[0]\n","audio = audio.cpu().detach().numpy()[0]\n","\n","print(f'\"{text4}\"\\n')\n","\n","ipd.Audio(audio, rate=22050)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":109},"id":"vwG5r-kszpGf","executionInfo":{"status":"ok","timestamp":1732982623158,"user_tz":-480,"elapsed":789,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"0134c94f-4905-427b-d740-319a2eabe5da"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["\"Please call me at night.\"\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<IPython.lib.display.Audio object>"],"text/html":["\n","                <audio  controls=\"controls\" >\n","                    <source src=\"data:audio/wav;base64,\" type=\"audio/wav\" />\n","                    Your browser does not support the audio element.\n","                </audio>\n","              "]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["text5 = \"I love you everyday.\"\n","\n","tokens = fastpitch_model.parse(text5, normalize=True)\n","\n","spectrogram = fastpitch_model.generate_spectrogram(tokens=tokens)\n","\n","audio = vocoder.convert_spectrogram_to_audio(spec=spectrogram)\n","\n","spectrogram = spectrogram.cpu().detach().numpy()[0]\n","audio = audio.cpu().detach().numpy()[0]\n","print(f'\"{text5}\"\\n')\n","\n","ipd.Audio(audio, rate=22050)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":109},"id":"vcbZTBM70G4F","executionInfo":{"status":"ok","timestamp":1732982725103,"user_tz":-480,"elapsed":750,"user":{"displayName":"Zihan Ma","userId":"09404852070494155616"}},"outputId":"eaf154fb-c37b-4bdb-82d7-70082026a7c5"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["\"I love you everyday.\"\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<IPython.lib.display.Audio object>"],"text/html":["\n","                <audio  controls=\"controls\" >\n","                    <source src=\"data:audio/wav;base64,\" type=\"audio/wav\" />\n","                    Your browser does not support the audio element.\n","                </audio>\n","              "]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","metadata":{"id":"aozxSufVJa0l","pycharm":{"name":"#%% md\n"}},"source":["# 9.&nbsp;Model Evaluation"]},{"cell_type":"markdown","metadata":{"id":"I8522HduJmHM","pycharm":{"name":"#%% md\n"}},"source":["There are no well-established objective metrics for evaluating how good a TTS model is. Rather, quality is usually based on human opinion or perception, commonly measured through surveys.\n","\n","The most common type of survey for evaluating TTS quality is [mean opinion score](https://en.wikipedia.org/wiki/Mean_opinion_score) (**MOS**), in which listeners rate the quality of TTS samples on a 1 to 5 scale.\n","\n","Another common alternative is [MUSHRA](https://en.wikipedia.org/wiki/MUSHRA) in which users are provided a reference (the ground truth audio) and asked to rate several TTS samples relative to the reference.\n","\n","There are some metrics which are occasionally used to try and measure audio quality such as [MCD-DTW](https://github.com/MattShannon/mcd), [PESQ](https://en.wikipedia.org/wiki/Perceptual_Evaluation_of_Speech_Quality), and [STOI](https://torchmetrics.readthedocs.io/en/stable/audio/short_time_objective_intelligibility.html). But these have very limited accuracy and usefulness.\n","\n","The lack of objective numerical metrics that can be trained on is a large reason as to why many state of the art models rely on GAN based training to get good quality."]},{"cell_type":"code","source":["### this is the end of the DL practice first part, related to Text-to-Speech"],"metadata":{"id":"6zuFVfvjNDT6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OgtWptQ5tGlq","pycharm":{"name":"#%% md\n"}},"source":["# 10.&nbsp;Additional Resources"]},{"cell_type":"markdown","metadata":{"id":"wtJINtrStHvJ","pycharm":{"name":"#%% md\n"}},"source":["To learn more about what TTS technology and models are available in NeMo, please look through our [documentation](https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/stable/tts/intro.html#).\n","\n","To get more hands on experience with NeMo TTS, look through some of our other [tutorials](https://github.com/NVIDIA/NeMo/tree/stable/tutorials/tts).\n","\n","*   Running pretrained models: [Inference_ModelSelect](https://github.com/NVIDIA/NeMo/blob/stable/tutorials/tts/Inference_ModelSelect.ipynb)\n","*   FastPitch [training](https://github.com/NVIDIA/NeMo/blob/stable/tutorials/tts/FastPitch_MixerTTS_Training.ipynb) and [fine-tuning](https://github.com/NVIDIA/NeMo/blob/stable/tutorials/tts/FastPitch_Finetuning.ipynb)\n","\n","To learn how to deploy and serve your TTS models, visit [Riva](https://docs.nvidia.com/deeplearning/riva/index.html)."]},{"cell_type":"markdown","metadata":{"id":"V0Og5xzqVwp8","pycharm":{"name":"#%% md\n"}},"source":["# 11.&nbsp;References"]},{"cell_type":"markdown","metadata":{"id":"0K_QsdvOVx1M","pycharm":{"name":"#%% md\n"}},"source":["1.   [Speech Processing Primer](https://aman.ai/primers/ai/speech-processing/)\n","2.   [TTS Survey](https://arxiv.org/abs/2106.15561)\n","3.   [Tacotron 2](https://google.github.io/tacotron/publications/tacotron2/index.html)\n","4.   [Non-Attentive Tacotron](https://arxiv.org/abs/2010.04301)\n","5.   [FastPitch](https://fastpitch.github.io/)\n","6.   [RAD-TTS](https://nv-adlr.github.io/RADTTS)\n","7.   [VITS](https://arxiv.org/pdf/2106.06103.pdf)\n","8.   [One TTS Alignment To Rule Them All](https://arxiv.org/abs/2108.10447)\n","9.   [Parallel Models](https://arxiv.org/abs/2202.13066)\n","10.   [WaveNet](https://www.deepmind.com/blog/wavenet-a-generative-model-for-raw-audio)\n","11.   [HiFi-GAN](https://arxiv.org/abs/2010.05646)\n","12.   [WaveRNN](https://arxiv.org/abs/1802.08435)\n","13.   [PyTorch](https://pytorch.org/docs/stable/index.html)\n","14.   [CMU Pronouncing Dictionary](http://www.speech.cs.cmu.edu/cgi-bin/cmudict)"]}],"metadata":{"colab":{"provenance":[{"file_id":"1KAKyo-ocxucj7X31Qxv3xwVp-BJ49G5b","timestamp":1732975121287}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.15"},"vscode":{"interpreter":{"hash":"f8a1d50fd7b1e17bd198f085b8ced031398c6134b0da7c4415c17601bbcccc4e"}},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}